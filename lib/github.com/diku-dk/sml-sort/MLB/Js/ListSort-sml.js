if ((typeof(listsort$0ListSort$1)) == "undefined") {listsort$0ListSort$1 = {};
};
(function(){listsort$0ListSort$1.sort$50 = function(ordr$53,xs$56){var fix$286 = {};
fix$286.$merge = function(v$60,v$63){if (v$60 == null) {return v$63;
} else {if (v$63 == null) {return v$60;
} else {var v$83 = v$60;
var v$84 = v$83[0];
var v$85 = v$83[1];
var v$86 = v$63;
var v$87 = v$86[0];
var v$88 = v$86[1];
var t$299;
var v$268 = ordr$53([v$84,v$87]);
var v$269 = 1;
t$299 = ((basis$0General$1.eq_order$252(v$268,v$269))?false:true);
return t$299?[v$84,fix$286.$merge(v$85,[v$87,v$88])]:[v$87,fix$286.$merge([v$84,v$85],v$88)];
};
};
};
var merge$57 = fix$286.$merge;
var fix$287 = {};
fix$287.$mergepairs = function(v$92,v$95,v$98){lab$mergepairs: while (true) {if (v$95 == null) {return [v$92,null];
} else {var v$118 = v$95;
var v$119 = v$118[0];
var v$120 = v$118[1];
if ((SmlPrims.mod_i32(v$98,2,CompilerInitial.exn$Div$45)) == 1) {return [v$92,v$95];
} else {var t$288 = merge$57(v$92,v$119);
var t$289 = v$120;
var t$290 = SmlPrims.div_i32(v$98,2,CompilerInitial.exn$Div$45);
var v$92 = t$288;
var v$95 = t$289;
var v$98 = t$290;
continue lab$mergepairs;
};
};
};
};
var mergepairs$89 = fix$287.$mergepairs;
var fix$291 = {};
fix$291.$nextrun = function(v$125,v$128){lab$nextrun: while (true) {if (v$128 == null) {return [v$125,null];
} else {var v$145 = v$128;
var v$146 = v$145[0];
var v$147 = v$145[1];
var t$292;
var v$275 = ordr$53([v$146,basis$0List$1.hd$60(v$125)]);
var v$276 = 0;
t$292 = (basis$0General$1.eq_order$252(v$275,v$276));
if (t$292) {return [v$125,v$128];
} else {var t$293 = [v$146,v$125];
var t$294 = v$147;
var v$125 = t$293;
var v$128 = t$294;
continue lab$nextrun;
};
};
};
};
var nextrun$122 = fix$291.$nextrun;
var fix$295 = {};
fix$295.$sorting = function(v$151,v$154,v$157){lab$sorting: while (true) {if (v$151 == null) {return basis$0List$1.hd$60(mergepairs$89(null,v$154,0));
} else {var v$177 = v$151;
var v$178 = v$177[0];
var v$179 = v$177[1];
var v$174 = nextrun$122([v$178,null],v$179);
var v$175 = v$174[0];
var v$176 = v$174[1];
var t$296 = v$176;
var t$297 = mergepairs$89(basis$0List$1.rev$253(v$175),v$154,SmlPrims.chk_ovf_i32(v$157 + 1));
var t$298 = SmlPrims.chk_ovf_i32(v$157 + 1);
var v$151 = t$296;
var v$154 = t$297;
var v$157 = t$298;
continue lab$sorting;
};
};
};
var sorting$148 = fix$295.$sorting;
return sorting$148(xs$56,null,0);
};
listsort$0ListSort$1.sorted$182 = function(v$185,v$188){if (v$188 == null) {return true;
} else {var v$225 = v$188;
var v$226 = v$225[0];
var v$227 = v$225[1];
var fix$300 = {};
fix$300.$h = function(v$202,v$205){lab$h: while (true) {if (v$205 == null) {return true;
} else {var v$221 = v$205;
var v$222 = v$221[0];
var v$223 = v$221[1];
var t$301;
var v$284 = v$185([v$202,v$222]);
var v$285 = 1;
t$301 = ((basis$0General$1.eq_order$252(v$284,v$285))?false:true);
if (t$301) {var t$302 = v$222;
var t$303 = v$223;
var v$202 = t$302;
var v$205 = t$303;
continue lab$h;
} else {return false;
};
};
};
};
var h$199 = fix$300.$h;
return h$199(v$226,v$227);
};
};
return 0;
})();
