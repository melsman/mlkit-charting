if ((typeof(basis$0PackRealLittle$1)) == "undefined") {basis$0PackRealLittle$1 = {};
};
(function(){basis$0PackRealLittle$1.bytesPerElem$51 = 8;
basis$0PackRealLittle$1.isBigEndian$52 = false;
basis$0PackRealLittle$1.toBytes$61 = function(r$64){return SmlPrims.real_to_bytes(r$64);
};
basis$0PackRealLittle$1.fromBytes$65 = function(s$68){return SmlPrims.bytes_to_real(s$68);
};
basis$0PackRealLittle$1.subVec$69 = function(v$91,v$92){var fix$168 = {};
fix$168.$toL = function(v$77,v$80){lab$toL: while (true) {switch (v$77) { case 9: {return v$80;
 break; }default: {var t$169 = SmlPrims.chk_ovf_i32(v$77 + 1);
var t$170 = [basis$0ByteTable$1$16.sub$2455(v$91,SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$92 + 1)) * 8)) - v$77)),v$80];
var v$77 = t$169;
var v$80 = t$170;
continue lab$toL;
} };
};
};
var toL$74 = fix$168.$toL;
return SmlPrims.bytes_to_real(SmlPrims.implode(toL$74(1,null)));
};
basis$0PackRealLittle$1.subArr$93 = function(v$115,v$116){var fix$171 = {};
fix$171.$toL = function(v$101,v$104){lab$toL: while (true) {switch (v$101) { case 9: {return v$104;
 break; }default: {var t$172 = SmlPrims.chk_ovf_i32(v$101 + 1);
var t$173 = [basis$0ByteTable$1$22.sub$3573(v$115,SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$116 + 1)) * 8)) - v$101)),v$104];
var v$101 = t$172;
var v$104 = t$173;
continue lab$toL;
} };
};
};
var toL$98 = fix$171.$toL;
return SmlPrims.bytes_to_real(SmlPrims.implode(toL$98(1,null)));
};
basis$0PackRealLittle$1.update$117 = function(v$126,v$127,v$128){return basis$0ByteTable$1$22.copyVec$4015(v$127,v$126,SmlPrims.real_to_bytes(v$128));
};
return 0;
})();
