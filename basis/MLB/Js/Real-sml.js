if ((typeof(basis$0Real$1)) == "undefined") {basis$0Real$1 = {};
};
(function(){basis$0Real$1.floor$55 = function(x$58){return SmlPrims.chk_ovf_i32(Math.floor(x$58));
};
basis$0Real$1.ceil$59 = function(x$62){return SmlPrims.chk_ovf_i32(Math.ceil(x$62));
};
basis$0Real$1.trunc$63 = function(x$66){return SmlPrims.chk_ovf_i32(SmlPrims.trunc(x$66));
};
var toStringGen$142 = function(precision$145,x$148){var s$690;
var s$693 = x$148.toPrecision(precision$145);
var stop$694 = s$693.length;
var fix$981 = {};
fix$981.$loop = function(i$696){lab$loop: while (true) {if (i$696 == stop$694) {return s$693 + ".0";
} else {if (((s$693.charCodeAt(i$696)) == 46)?true:((s$693.charCodeAt(i$696)) == 69)) {return s$693;
} else {var t$982 = SmlPrims.chk_ovf_i32(i$696 + 1);
var i$696 = t$982;
continue lab$loop;
};
};
};
};
var loop$695 = fix$981.$loop;
s$690 = (loop$695(0));
var s$691 = basis$0String$1.translate$213(function(v$692){switch (v$692) { case 101: {return "E";
 break; }case 45: {return "~";
 break; }case 43: {return "";
 break; }default: {return basis$0Char$1.toString$273(v$692);
} };
},s$690);
switch (s$691) { case "Infinity": {return "inf";
 break; }case "~Infinity": {return "~inf";
 break; }case "NaN": {return "nan";
 break; }default: {return s$691;
} };
};
basis$0Real$1.toString$149 = function(x$152){return toStringGen$142(12,x$152);
};
basis$0Real$1.isNan$153 = function(x$156){return isNaN(x$156);
};
basis$0Real$1.posInf$157 = basis$0Initial$1.posInf$57;
basis$0Real$1.negInf$158 = basis$0Initial$1.negInf$58;
basis$0Real$1.fromInt$159 = function(x$700){return x$700;
};
basis$0Real$1.fmt$160 = function(spec$163){switch (spec$163[0]) { case 0: {var v$205 = spec$163[1];
switch (v$205[0]) { case 1: {return function(x$702){var s$703 = x$702.toExponential(6);
var s$704 = basis$0String$1.translate$213(function(v$705){switch (v$705) { case 101: {return "E";
 break; }case 45: {return "~";
 break; }case 43: {return "";
 break; }default: {return basis$0Char$1.toString$273(v$705);
} };
},s$703);
switch (s$704) { case "Infinity": {return "inf";
 break; }case "~Infinity": {return "~inf";
 break; }case "NaN": {return "nan";
 break; }default: {return s$704;
} };
};
 break; }default: {var v$214 = v$205[1];
if ((v$214 < 0)?true:(v$214 > 20)) {throw basis$0General$1.exn$Size$58;
} else {return function(x$707){var s$708 = x$707.toExponential(v$214);
var s$709 = basis$0String$1.translate$213(function(v$710){switch (v$710) { case 101: {return "E";
 break; }case 45: {return "~";
 break; }case 43: {return "";
 break; }default: {return basis$0Char$1.toString$273(v$710);
} };
},s$708);
switch (s$709) { case "Infinity": {return "inf";
 break; }case "~Infinity": {return "~inf";
 break; }case "NaN": {return "nan";
 break; }default: {return s$709;
} };
};
};
} };
 break; }case 2: {var v$194 = spec$163[1];
switch (v$194[0]) { case 1: {return function(x$712){var s$713 = x$712.toFixed(6);
var s$714 = basis$0String$1.translate$213(function(v$715){switch (v$715) { case 101: {return "E";
 break; }case 45: {return "~";
 break; }case 43: {return "";
 break; }default: {return basis$0Char$1.toString$273(v$715);
} };
},s$713);
switch (s$714) { case "Infinity": {return "inf";
 break; }case "~Infinity": {return "~inf";
 break; }case "NaN": {return "nan";
 break; }default: {return s$714;
} };
};
 break; }default: {var v$203 = v$194[1];
if ((v$203 < 0)?true:(v$203 > 20)) {throw basis$0General$1.exn$Size$58;
} else {return function(x$717){var s$718 = x$717.toFixed(v$203);
var s$719 = basis$0String$1.translate$213(function(v$720){switch (v$720) { case 101: {return "E";
 break; }case 45: {return "~";
 break; }case 43: {return "";
 break; }default: {return basis$0Char$1.toString$273(v$720);
} };
},s$718);
switch (s$719) { case "Infinity": {return "inf";
 break; }case "~Infinity": {return "~inf";
 break; }case "NaN": {return "nan";
 break; }default: {return s$719;
} };
};
};
} };
 break; }case 1: {var v$183 = spec$163[1];
switch (v$183[0]) { case 1: {return function(x$721){return toStringGen$142(12,x$721);
};
 break; }default: {var v$192 = v$183[1];
if ((v$192 < 1)?true:(v$192 > 20)) {throw basis$0General$1.exn$Size$58;
} else {return function(v$923){return toStringGen$142(v$192,v$923);
};
};
} };
 break; }default: {return function(v$925){return toStringGen$142(20,v$925);
};
} };
};
basis$0Real$1.scan$215 = function(getc$218,source$221){var fix$983 = {};
fix$983.$pow10 = function(v$229){switch (v$229) { case 0: {return 1.0;
 break; }default: {if ((SmlPrims.mod_i32(v$229,2,CompilerInitial.exn$Div$45)) == 0) {var x$239 = fix$983.$pow10(SmlPrims.div_i32(v$229,2,CompilerInitial.exn$Div$45));
return x$239 * x$239;
} else {return 10.0 * (fix$983.$pow10(SmlPrims.chk_ovf_i32(v$229 - 1)));
};
} };
};
var pow10$226 = fix$983.$pow10;
var scandigs$278 = function(first$281,next$284,final$287,source$290){var fix$984 = {};
fix$984.$digs = function(state$294,src$297){lab$digs: while (true) {var v$303 = getc$218(src$297);
switch (v$303[0]) { case 1: {return [[0,final$287(state$294)],src$297];
 break; }default: {var v$308 = v$303[1];
var v$309 = v$308[0];
var v$310 = v$308[1];
if ((48 <= v$309)?(v$309 <= 57):false) {var t$985 = next$284([state$294,SmlPrims.chk_ovf_i32(v$309 - 48)]);
var t$986 = v$310;
var state$294 = t$985;
var src$297 = t$986;
continue lab$digs;
} else {return [[0,final$287(state$294)],src$297];
};
} };
};
};
var digs$291 = fix$984.$digs;
var v$316 = getc$218(source$290);
switch (v$316[0]) { case 1: {return [[1],source$290];
 break; }default: {var v$321 = v$316[1];
var v$322 = v$321[0];
var v$323 = v$321[1];
if ((48 <= v$322)?(v$322 <= 57):false) {return digs$291(first$281(SmlPrims.chk_ovf_i32(v$322 - 48)),v$323);
} else {return [[1],source$290];
};
} };
};
var src$384 = basis$0StringCvt$1.dropl$246(function(c$737){return (c$737 == 32)?true:((9 <= c$737)?(c$737 <= 13):false);
},getc$218,source$221);
var v$490;
var v$739 = getc$218(src$384);
switch (v$739[0]) { case 0: {var v$740 = v$739[1];
switch (v$740[0]) { case 43: {v$490 = [true,v$740[1]];
 break; }case 45: {v$490 = [false,v$740[1]];
 break; }case 126: {v$490 = [false,v$740[1]];
 break; }default: {v$490 = [true,src$384];
} };
 break; }default: {v$490 = [true,src$384];
} };
var v$491 = v$490[0];
var v$492 = v$490[1];
var v$487 = scandigs$278(function(x$948){return x$948;
},function(v$949){return (10.0 * v$949[0]) + v$949[1];
},function(x$950){return x$950;
},v$492);
var v$488 = v$487[0];
var v$489 = v$487[1];
var v$484;
var v$742 = getc$218(v$489);
switch (v$742[0]) { case 1: {v$484 = [false,v$489];
 break; }default: {var v$743 = v$742[1];
var v$744 = v$743[0];
var v$745 = v$743[1];
v$484 = ((v$744 == 46)?[true,v$745]:[false,v$489]);
} };
var v$485 = v$484[0];
var v$486 = v$484[1];
var v$481 = scandigs$278(function(cval$961){return [1,cval$961];
},function(v$962){var v$963 = v$962[0];
var v$964 = v$963[0];
var v$965 = v$963[1];
var v$966 = v$962[1];
return [SmlPrims.chk_ovf_i32(v$964 + 1),(10.0 * v$965) + v$966];
},function(v$967){var v$968 = v$967[0];
return v$967[1] / (pow10$226(v$968));
},v$486);
var v$482 = v$481[0];
var v$483 = v$481[1];
var expopt$408 = function(manval$411,src$414){var v$444;
var v$747 = getc$218(src$414);
switch (v$747[0]) { case 1: {v$444 = [false,src$414];
 break; }default: {var v$748 = v$747[1];
var v$749 = v$748[0];
var v$750 = v$748[1];
v$444 = (((v$749 == 101)?true:(v$749 == 69))?[true,v$750]:[false,src$414]);
} };
var v$445 = v$444[0];
var v$446 = v$444[1];
var v$441;
var v$752 = getc$218(v$446);
switch (v$752[0]) { case 0: {var v$753 = v$752[1];
switch (v$753[0]) { case 43: {v$441 = [true,v$753[1]];
 break; }case 45: {v$441 = [false,v$753[1]];
 break; }case 126: {v$441 = [false,v$753[1]];
 break; }default: {v$441 = [true,v$446];
} };
 break; }default: {v$441 = [true,v$446];
} };
var v$442 = v$441[0];
var v$443 = v$441[1];
var v$438 = scandigs$278(function(x$976){return x$976;
},function(v$977){var v$978 = v$977[0];
var v$979 = v$977[1];
return SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(10 * v$978)) + v$979);
},function(x$980){return x$980;
},v$443);
var v$439 = v$438[0];
var v$440 = v$438[1];
switch (v$439[0]) { case 1: {return [0,[v$491?manval$411:(-(manval$411)),src$414]];
 break; }default: {if (v$445) {var v$437 = v$439[1];
if (v$442) {var v$756 = manval$411 * (pow10$226(v$437));
return [0,[v$491?v$756:(-(v$756)),v$440]];
} else {var v$758 = manval$411 / (pow10$226(v$437));
return [0,[v$491?v$758:(-(v$758)),v$440]];
};
} else {return [1];
};
} };
};
switch (v$488[0]) { case 1: {if (v$485) {switch (v$482[0]) { case 0: {var v$470 = v$482[1];
return expopt$408(v$470,v$483);
 break; }default: {return [1];
} };
} else {return [1];
};
 break; }default: {if (v$485) {switch (v$482[0]) { case 1: {var v$478 = v$488[1];
return [0,[v$491?v$478:(-(v$478)),v$489]];
 break; }default: {var v$479 = v$488[1];
var v$480 = v$482[1];
return expopt$408(v$479 + v$480,v$483);
} };
} else {switch (v$482[0]) { case 0: {return [1];
 break; }default: {var v$476 = v$488[1];
return expopt$408(v$476,v$489);
} };
};
} };
};
basis$0Real$1.fromString$493 = function(s$496){return basis$0StringCvt$1.scanString$159(function(v$938){return function(v$939){return basis$0Real$1.scan$215(v$938,v$939);
};
},s$496);
};
basis$0Real$1.s$p$497 = function(v$498){return -(v$498);
};
basis$0Real$1.s$f$499 = function(v$900,v$901){return v$900 + v$901;
};
basis$0Real$1.s$g$501 = function(v$902,v$903){return v$902 - v$903;
};
basis$0Real$1.s$t$503 = function(v$904,v$905){return v$904 * v$905;
};
basis$0Real$1.s$h$505 = function(v$906,v$907){return v$906 / v$907;
};
basis$0Real$1.s$l$506 = function(v$908,v$909){return v$908 > v$909;
};
basis$0Real$1.s$lk$508 = function(v$910,v$911){return v$910 >= v$911;
};
basis$0Real$1.s$j$510 = function(v$912,v$913){return v$912 < v$913;
};
basis$0Real$1.s$jk$512 = function(v$914,v$915){return v$914 <= v$915;
};
basis$0Real$1.abs$514 = function(v$515){return Math.abs(v$515);
};
basis$0Real$1.sign$516 = function(i$519){return (i$519 > 0.0)?1:((i$519 < 0.0)?(-1):0);
};
basis$0Real$1.compare$528 = function(v$916,v$917){var v$541 = v$916;
var v$542 = v$917;
return (v$541 < v$542)?0:((v$541 > v$542)?1:2);
};
basis$0Real$1.s$kk$543 = function(v$918,v$919){var v$552 = v$918;
var v$553 = v$919;
switch ((v$552 < v$553)?0:((v$552 > v$553)?1:2)) { case 2: {return true;
 break; }default: {return false;
} };
};
basis$0Real$1.s$ak$554 = function(v$920,v$921){var v$563 = v$920;
var v$564 = v$921;
switch ((v$563 < v$564)?0:((v$563 > v$564)?1:2)) { case 2: {return false;
 break; }default: {return true;
} };
};
basis$0Real$1.isFinite$565 = function(r$568){if (isNaN(r$568)) {return false;
} else {var t$987;
switch ((r$568 < basis$0Initial$1.posInf$57)?0:((r$568 > basis$0Initial$1.posInf$57)?1:2)) { case 2: {t$987 = false;
 break; }default: {t$987 = true;
} };
if (t$987) {switch ((r$568 < basis$0Initial$1.negInf$58)?0:((r$568 > basis$0Initial$1.negInf$58)?1:2)) { case 2: {return false;
 break; }default: {return true;
} };
} else {return false;
};
};
};
basis$0Real$1.sameSign$577 = function(v$582,v$583){return ((v$582 > 0.0)?1:((v$582 < 0.0)?(-1):0)) == ((v$583 > 0.0)?1:((v$583 < 0.0)?(-1):0));
};
basis$0Real$1.min$584 = function(v$593,v$594){return (v$593 < v$594)?v$593:v$594;
};
basis$0Real$1.max$595 = function(v$604,v$605){return (v$604 < v$605)?v$605:v$604;
};
basis$0Real$1.round$606 = function(x$609){var t0$610 = x$609 + 0.5;
var floor_t0$611 = SmlPrims.chk_ovf_i32(Math.floor(t0$610));
var t$988;
var v$887 = floor_t0$611;
switch ((v$887 < t0$610)?0:((v$887 > t0$610)?1:2)) { case 2: {t$988 = true;
 break; }default: {t$988 = false;
} };
if (t$988) {var t$620 = SmlPrims.chk_ovf_i32(Math.floor(x$609));
return ((SmlPrims.mod_i32(t$620,2,CompilerInitial.exn$Div$45)) == 0)?t$620:floor_t0$611;
} else {return floor_t0$611;
};
};
basis$0Real$1.toDefault$625 = function(i$628){return i$628;
};
basis$0Real$1.fromDefault$629 = function(i$632){return i$632;
};
basis$0Real$1.real$633 = function(a$636){return a$636;
};
basis$0Real$1.floor$637 = function(a$640){return SmlPrims.chk_ovf_i32(Math.floor(a$640));
};
basis$0Real$1.ceil$641 = function(a$644){return SmlPrims.chk_ovf_i32(Math.ceil(a$644));
};
basis$0Real$1.trunc$645 = function(a$648){return SmlPrims.chk_ovf_i32(SmlPrims.trunc(a$648));
};
basis$0Real$1.round$649 = function(a$652){var t0$896 = a$652 + 0.5;
var floor_t0$897 = SmlPrims.chk_ovf_i32(Math.floor(t0$896));
var t$989;
var v$898 = floor_t0$897;
switch ((v$898 < t0$896)?0:((v$898 > t0$896)?1:2)) { case 2: {t$989 = true;
 break; }default: {t$989 = false;
} };
if (t$989) {var t$899 = SmlPrims.chk_ovf_i32(Math.floor(a$652));
return ((SmlPrims.mod_i32(t$899,2,CompilerInitial.exn$Div$45)) == 0)?t$899:floor_t0$897;
} else {return floor_t0$897;
};
};
return 0;
})();
