if ((typeof(isodate$0isodate$1)) == "undefined") {isodate$0isodate$1 = {};
};
(function(){var fromYMDopt$125 = function(v$156,v$155,v$154){if (v$154 < 0) {return [1];
} else {if ((v$155 <= 0)?true:(v$155 > 12)) {return [1];
} else {var t$2365;
if (v$156 <= 0) {t$2365 = true;
} else {var t$2364 = v$156;
var t$2361;
switch (v$155) { case 2: {var t$2363;
if ((SmlPrims.mod_i32(v$154,4,CompilerInitial.exn$Div$47)) == 0) {var t$2362;
var v$1799 = SmlPrims.mod_i32(v$154,100,CompilerInitial.exn$Div$47);
t$2362 = ((v$1799 == 0)?false:true);
t$2363 = (t$2362?true:((SmlPrims.mod_i32(v$154,400,CompilerInitial.exn$Div$47)) == 0));
} else {t$2363 = false;
};
t$2361 = (t$2363?29:28);
 break; }case 4: {t$2361 = 30;
 break; }case 6: {t$2361 = 30;
 break; }case 9: {t$2361 = 30;
 break; }case 11: {t$2361 = 30;
 break; }default: {t$2361 = 31;
} };
t$2365 = (t$2364 > t$2361);
};
if (t$2365) {return [1];
} else {var t$2360;
var v$1299;
var v$143 = SmlPrims.i32_to_w32(v$154);
var v$144 = SmlPrims.i32_to_w32(v$155);
v$1299 = [SmlPrims.i32_to_w32(v$156),v$144,v$143];
var v$1300 = v$1299[2];
var v$1301 = v$1299[1];
var v$1302 = v$1299[0];
t$2360 = ((((((((v$1300 << (4 & 31)) & 4294967295) + v$1301) & 4294967295) << (5 & 31)) & 4294967295) + v$1302) & 4294967295);
return [0,t$2360];
};
};
};
};
isodate$0isodate$1.date$168 = function(x$171){var v$2063 = fromYMDopt$125(x$171[0],x$171[1],x$171[2]);
switch (v$2063[0]) { case 0: {return v$2063[1];
 break; }default: {var v$2064 = x$171[2];
var v$2066 = x$171[1];
var v$2067 = x$171[0];
var s$2065 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2064))) + ",month=") + (basis$0Int32$1.toString$458(v$2066))) + ",day=") + (basis$0Int32$1.toString$458(v$2067))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2065];
} };
};
isodate$0isodate$1.toYMD$179 = function(t$182){var v$183 = SmlPrims.chk_ovf_i32(t$182 >>> 9);
var v$184 = SmlPrims.chk_ovf_i32(15 & (t$182 >>> 5));
return [SmlPrims.chk_ovf_i32(31 & t$182),v$184,v$183];
};
isodate$0isodate$1.year$186 = function(x$1342){return SmlPrims.chk_ovf_i32(x$1342 >>> 9);
};
isodate$0isodate$1.month$187 = function(x$1351){return SmlPrims.chk_ovf_i32(15 & (x$1351 >>> 5));
};
isodate$0isodate$1.day$188 = function(x$1361){return SmlPrims.chk_ovf_i32(31 & x$1361);
};
isodate$0isodate$1.lt$196 = function(v$2312,v$2313){return v$2312 < v$2313;
};
isodate$0isodate$1.lte$203 = function(v$2314,v$2315){return v$2314 <= v$2315;
};
isodate$0isodate$1.min$210 = function(v$219,v$220){return (v$219 < v$220)?v$219:v$220;
};
isodate$0isodate$1.max$221 = function(v$230,v$231){return (v$230 < v$231)?v$231:v$230;
};
isodate$0isodate$1.compare$232 = function(v$237,v$238){return basis$0Word32$1.compare$469(v$237,v$238);
};
isodate$0isodate$1.toStringWithSep$251 = function(sep$254,d$257){var v$262;
var v$1378 = SmlPrims.chk_ovf_i32(d$257 >>> 9);
var v$1383 = SmlPrims.chk_ovf_i32(15 & (d$257 >>> 5));
v$262 = [SmlPrims.chk_ovf_i32(31 & d$257),v$1383,v$1378];
var v$263 = v$262[2];
var v$264 = v$262[1];
var v$265 = v$262[0];
var t$2377;
var t$2376;
var t$2375;
var t$2374;
var fix$2372 = {};
fix$2372.$pad = function(s$2082){lab$pad: while (true) {var sz$2083 = s$2082.length;
if (sz$2083 >= 4) {return s$2082;
} else {var t$2373 = "0" + s$2082;
var s$2082 = t$2373;
continue lab$pad;
};
};
};
var pad$2081 = fix$2372.$pad;
t$2374 = (pad$2081(basis$0Int32$1.toString$458(v$263)));
t$2375 = (t$2374 + sep$254);
var t$2371;
var fix$2369 = {};
fix$2369.$pad = function(s$2088){lab$pad: while (true) {var sz$2089 = s$2088.length;
if (sz$2089 >= 2) {return s$2088;
} else {var t$2370 = "0" + s$2088;
var s$2088 = t$2370;
continue lab$pad;
};
};
};
var pad$2087 = fix$2369.$pad;
t$2371 = (pad$2087(basis$0Int32$1.toString$458(v$264)));
t$2376 = (t$2375 + t$2371);
t$2377 = (t$2376 + sep$254);
var t$2368;
var fix$2366 = {};
fix$2366.$pad = function(s$2094){lab$pad: while (true) {var sz$2095 = s$2094.length;
if (sz$2095 >= 2) {return s$2094;
} else {var t$2367 = "0" + s$2094;
var s$2094 = t$2367;
continue lab$pad;
};
};
};
var pad$2093 = fix$2366.$pad;
t$2368 = (pad$2093(basis$0Int32$1.toString$458(v$265)));
return t$2377 + t$2368;
};
isodate$0isodate$1.toString$266 = function(d$269){return isodate$0isodate$1.toStringWithSep$251("-",d$269);
};
isodate$0isodate$1.next$270 = function(d$273){var v$295;
var v$1396 = SmlPrims.chk_ovf_i32(d$273 >>> 9);
var v$1401 = SmlPrims.chk_ovf_i32(15 & (d$273 >>> 5));
v$295 = [SmlPrims.chk_ovf_i32(31 & d$273),v$1401,v$1396];
var v$296 = v$295[2];
var v$297 = v$295[1];
var v$298 = v$295[0];
var t$2382;
var t$2381 = v$298;
var t$2378;
switch (v$297) { case 2: {var t$2380;
if ((SmlPrims.mod_i32(v$296,4,CompilerInitial.exn$Div$47)) == 0) {var t$2379;
var v$1883 = SmlPrims.mod_i32(v$296,100,CompilerInitial.exn$Div$47);
t$2379 = ((v$1883 == 0)?false:true);
t$2380 = (t$2379?true:((SmlPrims.mod_i32(v$296,400,CompilerInitial.exn$Div$47)) == 0));
} else {t$2380 = false;
};
t$2378 = (t$2380?29:28);
 break; }case 4: {t$2378 = 30;
 break; }case 6: {t$2378 = 30;
 break; }case 9: {t$2378 = 30;
 break; }case 11: {t$2378 = 30;
 break; }default: {t$2378 = 31;
} };
t$2382 = (t$2381 < t$2378);
if (t$2382) {var v$2336 = SmlPrims.chk_ovf_i32(v$298 + 1);
var v$2099 = fromYMDopt$125(v$2336,v$297,v$296);
switch (v$2099[0]) { case 0: {return v$2099[1];
 break; }default: {var s$2101 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$296))) + ",month=") + (basis$0Int32$1.toString$458(v$297))) + ",day=") + (basis$0Int32$1.toString$458(v$2336))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2101];
} };
} else {if (v$297 < 12) {var v$2340 = SmlPrims.chk_ovf_i32(v$297 + 1);
var v$2105 = fromYMDopt$125(1,v$2340,v$296);
switch (v$2105[0]) { case 0: {return v$2105[1];
 break; }default: {var s$2107 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$296))) + ",month=") + (basis$0Int32$1.toString$458(v$2340))) + ",day=") + (basis$0Int32$1.toString$458(1))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2107];
} };
} else {var v$2344 = SmlPrims.chk_ovf_i32(v$296 + 1);
var v$2111 = fromYMDopt$125(1,1,v$2344);
switch (v$2111[0]) { case 0: {return v$2111[1];
 break; }default: {var s$2113 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2344))) + ",month=") + (basis$0Int32$1.toString$458(1))) + ",day=") + (basis$0Int32$1.toString$458(1))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2113];
} };
};
};
};
isodate$0isodate$1.prev$299 = function(d$302){var v$324;
var v$1417 = SmlPrims.chk_ovf_i32(d$302 >>> 9);
var v$1422 = SmlPrims.chk_ovf_i32(15 & (d$302 >>> 5));
v$324 = [SmlPrims.chk_ovf_i32(31 & d$302),v$1422,v$1417];
var v$325 = v$324[2];
var v$326 = v$324[1];
var v$327 = v$324[0];
if (v$327 > 1) {var v$2345 = SmlPrims.chk_ovf_i32(v$327 - 1);
var v$2117 = fromYMDopt$125(v$2345,v$326,v$325);
switch (v$2117[0]) { case 0: {return v$2117[1];
 break; }default: {var s$2119 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$325))) + ",month=") + (basis$0Int32$1.toString$458(v$326))) + ",day=") + (basis$0Int32$1.toString$458(v$2345))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2119];
} };
} else {if (v$326 > 1) {var d$2122;
var v$319 = SmlPrims.chk_ovf_i32(v$326 - 1);
var t$2383;
switch (SmlPrims.chk_ovf_i32(v$326 - 1)) { case 2: {var t$2385;
if ((SmlPrims.mod_i32(v$325,4,CompilerInitial.exn$Div$47)) == 0) {var t$2384;
var v$1895 = SmlPrims.mod_i32(v$325,100,CompilerInitial.exn$Div$47);
t$2384 = ((v$1895 == 0)?false:true);
t$2385 = (t$2384?true:((SmlPrims.mod_i32(v$325,400,CompilerInitial.exn$Div$47)) == 0));
} else {t$2385 = false;
};
t$2383 = (t$2385?29:28);
 break; }case 4: {t$2383 = 30;
 break; }case 6: {t$2383 = 30;
 break; }case 9: {t$2383 = 30;
 break; }case 11: {t$2383 = 30;
 break; }default: {t$2383 = 31;
} };
d$2122 = [t$2383,v$319,v$325];
var v$2123 = fromYMDopt$125(d$2122[0],d$2122[1],d$2122[2]);
switch (v$2123[0]) { case 0: {return v$2123[1];
 break; }default: {var v$2124 = d$2122[2];
var v$2126 = d$2122[1];
var v$2127 = d$2122[0];
var s$2125 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2124))) + ",month=") + (basis$0Int32$1.toString$458(v$2126))) + ",day=") + (basis$0Int32$1.toString$458(v$2127))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2125];
} };
} else {var v$2350 = SmlPrims.chk_ovf_i32(v$325 - 1);
var v$2129 = fromYMDopt$125(31,12,v$2350);
switch (v$2129[0]) { case 0: {return v$2129[1];
 break; }default: {var s$2131 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2350))) + ",month=") + (basis$0Int32$1.toString$458(12))) + ",day=") + (basis$0Int32$1.toString$458(31))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2131];
} };
};
};
};
var todaynumber$347 = function(v$356,v$355,v$354){var prioryears$353 = SmlPrims.chk_ovf_i32(v$354 - 1);
var t$2396;
var t$2395;
var t$2394;
var t$2393;
var t$2386;
var monthno$1447 = SmlPrims.chk_ovf_i32(v$355 - 1);
var t$2392 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$356 - 1)) + (SmlPrims.chk_ovf_i32(31 * monthno$1447)));
var t$2391;
if (monthno$1447 > 1) {var t$2390 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32(27 + (SmlPrims.chk_ovf_i32(4 * monthno$1447))),10,CompilerInitial.exn$Div$47);
var t$2389;
var t$2388;
if ((SmlPrims.mod_i32(v$354,4,CompilerInitial.exn$Div$47)) == 0) {var t$2387;
var v$1899 = SmlPrims.mod_i32(v$354,100,CompilerInitial.exn$Div$47);
t$2387 = ((v$1899 == 0)?false:true);
t$2388 = (t$2387?true:((SmlPrims.mod_i32(v$354,400,CompilerInitial.exn$Div$47)) == 0));
} else {t$2388 = false;
};
t$2389 = (t$2388?1:0);
t$2391 = (SmlPrims.chk_ovf_i32(t$2390 - t$2389));
} else {t$2391 = 0;
};
t$2386 = (SmlPrims.chk_ovf_i32(t$2392 - t$2391));
t$2393 = (SmlPrims.chk_ovf_i32(t$2386 + 1));
t$2394 = (SmlPrims.chk_ovf_i32(t$2393 + (SmlPrims.chk_ovf_i32(365 * prioryears$353))));
t$2395 = (SmlPrims.chk_ovf_i32(t$2394 + (SmlPrims.div_i32(prioryears$353,4,CompilerInitial.exn$Div$47))));
t$2396 = (SmlPrims.chk_ovf_i32(t$2395 - (SmlPrims.div_i32(prioryears$353,100,CompilerInitial.exn$Div$47))));
return SmlPrims.chk_ovf_i32(t$2396 + (SmlPrims.div_i32(prioryears$353,400,CompilerInitial.exn$Div$47)));
};
isodate$0isodate$1.weekday$357 = function(d$360){var t$2397;
var v$2316;
var v$1454 = SmlPrims.chk_ovf_i32(d$360 >>> 9);
var v$1459 = SmlPrims.chk_ovf_i32(15 & (d$360 >>> 5));
v$2316 = [SmlPrims.chk_ovf_i32(31 & d$360),v$1459,v$1454];
t$2397 = (todaynumber$347(v$2316[0],v$2316[1],v$2316[2]));
return SmlPrims.mod_i32(t$2397,7,CompilerInitial.exn$Div$47);
};
isodate$0isodate$1.nextBusiness$383 = function(d$386){var fix$2398 = {};
fix$2398.$nextSkip = function(d$2152){lab$nextSkip: while (true) {var d$2153 = isodate$0isodate$1.next$270(d$2152);
var t$2400;
var wd$2155;
var t$2399;
var v$2317;
var v$2156 = SmlPrims.chk_ovf_i32(d$2153 >>> 9);
var v$2157 = SmlPrims.chk_ovf_i32(15 & (d$2153 >>> 5));
v$2317 = [SmlPrims.chk_ovf_i32(31 & d$2153),v$2157,v$2156];
t$2399 = (todaynumber$347(v$2317[0],v$2317[1],v$2317[2]));
wd$2155 = (SmlPrims.mod_i32(t$2399,7,CompilerInitial.exn$Div$47));
t$2400 = ((wd$2155 == 0)?true:(wd$2155 == 6));
if (t$2400) {var t$2401 = d$2153;
var d$2152 = t$2401;
continue lab$nextSkip;
} else {return d$2153;
};
};
};
var nextSkip$2151 = fix$2398.$nextSkip;
return nextSkip$2151(d$386);
};
isodate$0isodate$1.minus$387 = function(v$394,v$395){var t$2403;
var v$2318;
var v$1493 = SmlPrims.chk_ovf_i32(v$394 >>> 9);
var v$1498 = SmlPrims.chk_ovf_i32(15 & (v$394 >>> 5));
v$2318 = [SmlPrims.chk_ovf_i32(31 & v$394),v$1498,v$1493];
t$2403 = (todaynumber$347(v$2318[0],v$2318[1],v$2318[2]));
var t$2402;
var v$2319;
var v$1507 = SmlPrims.chk_ovf_i32(v$395 >>> 9);
var v$1512 = SmlPrims.chk_ovf_i32(15 & (v$395 >>> 5));
v$2319 = [SmlPrims.chk_ovf_i32(31 & v$395),v$1512,v$1507];
t$2402 = (todaynumber$347(v$2319[0],v$2319[1],v$2319[2]));
return SmlPrims.chk_ovf_i32(t$2403 - t$2402);
};
isodate$0isodate$1.epoch$403 = function(d$406){var t$2409;
var t$2408;
var t$2407;
var t$2406;
var t$2405;
var t$2404;
var v$2320;
var v$1537 = SmlPrims.chk_ovf_i32(d$406 >>> 9);
var v$1541 = SmlPrims.chk_ovf_i32(15 & (d$406 >>> 5));
v$2320 = [SmlPrims.chk_ovf_i32(31 & d$406),v$1541,v$1537];
t$2404 = (todaynumber$347(v$2320[0],v$2320[1],v$2320[2]));
t$2405 = (SmlPrims.chk_ovf_i32(t$2404 - (todaynumber$347(1,1,1970))));
t$2406 = t$2405;
t$2407 = (t$2406 * 3600.0);
t$2408 = (t$2407 * 24.0);
t$2409 = (t$2408 * 1000.0);
return t$2409;
};
var readNum$407 = function(v$457,v$458,v$459){var fix$2410 = {};
fix$2410.$read = function(v$2321,v$426,v$2322){lab$read: while (true) {switch (v$426) { case 0: {return [0,v$2322];
 break; }default: {var t$2411;
if ((v$2321 < 0)?true:(v$2321 >= v$457.length)) {throw CompilerInitial.exn$Subscript$52;
} else {t$2411 = (v$457.charCodeAt(v$2321));
};
switch (t$2411) { case 48: {var t$2439 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2440 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2441 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 0);
var v$2321 = t$2439;
var v$426 = t$2440;
var v$2322 = t$2441;
continue lab$read;
 break; }case 49: {var t$2436 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2437 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2438 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 1);
var v$2321 = t$2436;
var v$426 = t$2437;
var v$2322 = t$2438;
continue lab$read;
 break; }case 50: {var t$2433 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2434 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2435 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 2);
var v$2321 = t$2433;
var v$426 = t$2434;
var v$2322 = t$2435;
continue lab$read;
 break; }case 51: {var t$2430 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2431 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2432 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 3);
var v$2321 = t$2430;
var v$426 = t$2431;
var v$2322 = t$2432;
continue lab$read;
 break; }case 52: {var t$2427 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2428 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2429 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 4);
var v$2321 = t$2427;
var v$426 = t$2428;
var v$2322 = t$2429;
continue lab$read;
 break; }case 53: {var t$2424 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2425 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2426 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 5);
var v$2321 = t$2424;
var v$426 = t$2425;
var v$2322 = t$2426;
continue lab$read;
 break; }case 54: {var t$2421 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2422 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2423 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 6);
var v$2321 = t$2421;
var v$426 = t$2422;
var v$2322 = t$2423;
continue lab$read;
 break; }case 55: {var t$2418 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2419 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2420 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 7);
var v$2321 = t$2418;
var v$426 = t$2419;
var v$2322 = t$2420;
continue lab$read;
 break; }case 56: {var t$2415 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2416 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2417 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 8);
var v$2321 = t$2415;
var v$426 = t$2416;
var v$2322 = t$2417;
continue lab$read;
 break; }case 57: {var t$2412 = SmlPrims.chk_ovf_i32(v$2321 + 1);
var t$2413 = SmlPrims.chk_ovf_i32(v$426 - 1);
var t$2414 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2322 * 10)) + 9);
var v$2321 = t$2412;
var v$426 = t$2413;
var v$2322 = t$2414;
continue lab$read;
 break; }default: {return [1];
} };
} };
};
};
var read$413 = fix$2410.$read;
return read$413(v$458,v$459,0);
};
isodate$0isodate$1.fromString$460 = function(s$463){var t$2444;
var t$2443;
var v$1945 = s$463.length;
t$2443 = ((v$1945 == 10)?false:true);
if (t$2443) {t$2444 = true;
} else {var t$2442;
var v$1947;
if (4 >= s$463.length) {throw CompilerInitial.exn$Subscript$52;
} else {v$1947 = (s$463.charCodeAt(4));
};
t$2442 = ((v$1947 == 45)?false:true);
if (t$2442) {t$2444 = true;
} else {var v$1951;
if (7 >= s$463.length) {throw CompilerInitial.exn$Subscript$52;
} else {v$1951 = (s$463.charCodeAt(7));
};
t$2444 = ((v$1951 == 45)?false:true);
};
};
if (t$2444) {return [1];
} else {var v$1955 = readNum$407(s$463,0,4);
var v$1956 = readNum$407(s$463,5,2);
var v$1957 = readNum$407(s$463,8,2);
switch (v$1955[0]) { case 0: {switch (v$1956[0]) { case 0: {switch (v$1957[0]) { case 0: {var v$486 = v$1955[1];
var v$487 = v$1956[1];
var v$488 = v$1957[1];
return fromYMDopt$125(v$488,v$487,v$486);
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
};
};
isodate$0isodate$1.toMonth$498 = function(v$501){switch (v$501) { case 1: {return [0,7];
 break; }case 2: {return [0,8];
 break; }case 3: {return [0,4];
 break; }case 4: {return [0,11];
 break; }case 5: {return [0,3];
 break; }case 6: {return [0,5];
 break; }case 7: {return [0,6];
 break; }case 8: {return [0,10];
 break; }case 9: {return [0,0];
 break; }case 10: {return [0,1];
 break; }case 11: {return [0,2];
 break; }case 12: {return [0,9];
 break; }default: {return [1];
} };
};
isodate$0isodate$1.fromMonth$528 = function(v$531){switch (v$531) { case 7: {return 1;
 break; }case 8: {return 2;
 break; }case 4: {return 3;
 break; }case 11: {return 4;
 break; }case 3: {return 5;
 break; }case 5: {return 6;
 break; }case 6: {return 7;
 break; }case 10: {return 8;
 break; }case 0: {return 9;
 break; }case 1: {return 10;
 break; }case 2: {return 11;
 break; }default: {return 12;
} };
};
isodate$0isodate$1.toDate$591 = function(d$594){var v$602;
var v$1590 = SmlPrims.chk_ovf_i32(d$594 >>> 9);
var v$1595 = SmlPrims.chk_ovf_i32(15 & (d$594 >>> 5));
v$602 = [SmlPrims.chk_ovf_i32(31 & d$594),v$1595,v$1590];
var v$603 = v$602[2];
var v$604 = v$602[1];
var v$605 = v$602[0];
var v$2165;
switch (v$604) { case 1: {v$2165 = [0,7];
 break; }case 2: {v$2165 = [0,8];
 break; }case 3: {v$2165 = [0,4];
 break; }case 4: {v$2165 = [0,11];
 break; }case 5: {v$2165 = [0,3];
 break; }case 6: {v$2165 = [0,5];
 break; }case 7: {v$2165 = [0,6];
 break; }case 8: {v$2165 = [0,10];
 break; }case 9: {v$2165 = [0,0];
 break; }case 10: {v$2165 = [0,1];
 break; }case 11: {v$2165 = [0,2];
 break; }case 12: {v$2165 = [0,9];
 break; }default: {v$2165 = [1];
} };
switch (v$2165[0]) { case 0: {var v$2166 = v$2165[1];
return basis$0Date$1.date$1029(v$605,0,0,v$2166,[0,basis$0Time$1.zeroTime$60],0,v$603);
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"ISODate.datedate'"];
} };
};
isodate$0isodate$1.fromDate$606 = function(d$609){var d$2167;
var v$610 = basis$0Date$1.year$1069(d$609);
var v$611;
switch (basis$0Date$1.month$1078(d$609)) { case 7: {v$611 = 1;
 break; }case 8: {v$611 = 2;
 break; }case 4: {v$611 = 3;
 break; }case 11: {v$611 = 4;
 break; }case 3: {v$611 = 5;
 break; }case 5: {v$611 = 6;
 break; }case 6: {v$611 = 7;
 break; }case 10: {v$611 = 8;
 break; }case 0: {v$611 = 9;
 break; }case 1: {v$611 = 10;
 break; }case 2: {v$611 = 11;
 break; }default: {v$611 = 12;
} };
d$2167 = [basis$0Date$1.day$1087(d$609),v$611,v$610];
var v$2168 = fromYMDopt$125(d$2167[0],d$2167[1],d$2167[2]);
switch (v$2168[0]) { case 0: {return v$2168[1];
 break; }default: {var v$2169 = d$2167[2];
var v$2171 = d$2167[1];
var v$2172 = d$2167[0];
var s$2170 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2169))) + ",month=") + (basis$0Int32$1.toString$458(v$2171))) + ",day=") + (basis$0Int32$1.toString$458(v$2172))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2170];
} };
};
isodate$0isodate$1.firstInYear$613 = function(date$616){var v$2353 = SmlPrims.chk_ovf_i32(date$616 >>> 9);
var v$2174 = fromYMDopt$125(1,1,v$2353);
switch (v$2174[0]) { case 0: {return v$2174[1];
 break; }default: {var s$2176 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2353))) + ",month=") + (basis$0Int32$1.toString$458(1))) + ",day=") + (basis$0Int32$1.toString$458(1))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2176];
} };
};
isodate$0isodate$1.firstInMonth$620 = function(date$623){var d$2180;
var v$624 = SmlPrims.chk_ovf_i32(date$623 >>> 9);
d$2180 = [1,SmlPrims.chk_ovf_i32(15 & (date$623 >>> 5)),v$624];
var v$2181 = fromYMDopt$125(d$2180[0],d$2180[1],d$2180[2]);
switch (v$2181[0]) { case 0: {return v$2181[1];
 break; }default: {var v$2182 = d$2180[2];
var v$2184 = d$2180[1];
var v$2185 = d$2180[0];
var s$2183 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2182))) + ",month=") + (basis$0Int32$1.toString$458(v$2184))) + ",day=") + (basis$0Int32$1.toString$458(v$2185))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2183];
} };
};
isodate$0isodate$1.minus1Year$627 = function(date$630){var d$2188;
var v$631 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(date$630 >>> 9)) - 1);
var v$632 = SmlPrims.chk_ovf_i32(15 & (date$630 >>> 5));
d$2188 = [SmlPrims.chk_ovf_i32(31 & date$630),v$632,v$631];
var v$2189 = fromYMDopt$125(d$2188[0],d$2188[1],d$2188[2]);
switch (v$2189[0]) { case 0: {return v$2189[1];
 break; }default: {var v$2190 = d$2188[2];
var v$2192 = d$2188[1];
var v$2193 = d$2188[0];
var s$2191 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2190))) + ",month=") + (basis$0Int32$1.toString$458(v$2192))) + ",day=") + (basis$0Int32$1.toString$458(v$2193))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2191];
} };
};
isodate$0isodate$1.minus1Week$634 = function(date$637){var d$1605;
var v$1608;
var v$645 = SmlPrims.chk_ovf_i32(date$637 >>> 9);
var v$646;
var v$642;
switch (SmlPrims.chk_ovf_i32(15 & (date$637 >>> 5))) { case 1: {v$642 = [0,7];
 break; }case 2: {v$642 = [0,8];
 break; }case 3: {v$642 = [0,4];
 break; }case 4: {v$642 = [0,11];
 break; }case 5: {v$642 = [0,3];
 break; }case 6: {v$642 = [0,5];
 break; }case 7: {v$642 = [0,6];
 break; }case 8: {v$642 = [0,10];
 break; }case 9: {v$642 = [0,0];
 break; }case 10: {v$642 = [0,1];
 break; }case 11: {v$642 = [0,2];
 break; }case 12: {v$642 = [0,9];
 break; }default: {v$642 = [1];
} };
switch (v$642[0]) { case 0: {v$646 = v$642[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"ISODate.minus1Week couldn't get month"];
} };
v$1608 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(31 & date$637)) - 7),v$646,v$645];
var v$1609 = v$1608[2];
var v$1610 = v$1608[1];
var v$1611 = v$1608[0];
d$1605 = (basis$0Date$1.date$1029(v$1611,0,0,v$1610,[0,basis$0Time$1.zeroTime$60],0,v$1609));
var d$2200;
var v$1606 = basis$0Date$1.year$1069(d$1605);
var v$1607;
switch (basis$0Date$1.month$1078(d$1605)) { case 7: {v$1607 = 1;
 break; }case 8: {v$1607 = 2;
 break; }case 4: {v$1607 = 3;
 break; }case 11: {v$1607 = 4;
 break; }case 3: {v$1607 = 5;
 break; }case 5: {v$1607 = 6;
 break; }case 6: {v$1607 = 7;
 break; }case 10: {v$1607 = 8;
 break; }case 0: {v$1607 = 9;
 break; }case 1: {v$1607 = 10;
 break; }case 2: {v$1607 = 11;
 break; }default: {v$1607 = 12;
} };
d$2200 = [basis$0Date$1.day$1087(d$1605),v$1607,v$1606];
var v$2201 = fromYMDopt$125(d$2200[0],d$2200[1],d$2200[2]);
switch (v$2201[0]) { case 0: {return v$2201[1];
 break; }default: {var v$2202 = d$2200[2];
var v$2204 = d$2200[1];
var v$2205 = d$2200[0];
var s$2203 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2202))) + ",month=") + (basis$0Int32$1.toString$458(v$2204))) + ",day=") + (basis$0Int32$1.toString$458(v$2205))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2203];
} };
};
isodate$0isodate$1.minusNMonths$648 = function(date$651,N$654){var y$655 = SmlPrims.chk_ovf_i32(date$651 >>> 9);
var N$656 = SmlPrims.mod_i32(N$654,12,CompilerInitial.exn$Div$47);
var y$657 = SmlPrims.chk_ovf_i32(y$655 - (SmlPrims.div_i32(N$656,12,CompilerInitial.exn$Div$47)));
var m$658 = SmlPrims.chk_ovf_i32(15 & (date$651 >>> 5));
var v$666 = ((SmlPrims.chk_ovf_i32(m$658 - N$656)) > 0)?[SmlPrims.chk_ovf_i32(m$658 - N$656),y$657]:[SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(m$658 - N$656)) + 12),SmlPrims.chk_ovf_i32(y$657 - 1)];
var v$667 = v$666[0];
var v$668 = v$666[1];
var d$662 = SmlPrims.chk_ovf_i32(31 & date$651);
var d$1615;
var v$2213;
switch (v$667) { case 1: {v$2213 = [0,7];
 break; }case 2: {v$2213 = [0,8];
 break; }case 3: {v$2213 = [0,4];
 break; }case 4: {v$2213 = [0,11];
 break; }case 5: {v$2213 = [0,3];
 break; }case 6: {v$2213 = [0,5];
 break; }case 7: {v$2213 = [0,6];
 break; }case 8: {v$2213 = [0,10];
 break; }case 9: {v$2213 = [0,0];
 break; }case 10: {v$2213 = [0,1];
 break; }case 11: {v$2213 = [0,2];
 break; }case 12: {v$2213 = [0,9];
 break; }default: {v$2213 = [1];
} };
switch (v$2213[0]) { case 0: {var v$2214 = v$2213[1];
d$1615 = (basis$0Date$1.date$1029(d$662,0,0,v$2214,[0,basis$0Time$1.zeroTime$60],0,v$668));
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"ISODate.datedate'"];
} };
var d$2215;
var v$1616 = basis$0Date$1.year$1069(d$1615);
var v$1617;
switch (basis$0Date$1.month$1078(d$1615)) { case 7: {v$1617 = 1;
 break; }case 8: {v$1617 = 2;
 break; }case 4: {v$1617 = 3;
 break; }case 11: {v$1617 = 4;
 break; }case 3: {v$1617 = 5;
 break; }case 5: {v$1617 = 6;
 break; }case 6: {v$1617 = 7;
 break; }case 10: {v$1617 = 8;
 break; }case 0: {v$1617 = 9;
 break; }case 1: {v$1617 = 10;
 break; }case 2: {v$1617 = 11;
 break; }default: {v$1617 = 12;
} };
d$2215 = [basis$0Date$1.day$1087(d$1615),v$1617,v$1616];
var v$2216 = fromYMDopt$125(d$2215[0],d$2215[1],d$2215[2]);
switch (v$2216[0]) { case 0: {return v$2216[1];
 break; }default: {var v$2217 = d$2215[2];
var v$2219 = d$2215[1];
var v$2220 = d$2215[0];
var s$2218 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2217))) + ",month=") + (basis$0Int32$1.toString$458(v$2219))) + ",day=") + (basis$0Int32$1.toString$458(v$2220))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2218];
} };
};
isodate$0isodate$1.fromEpoch$673 = function(r$676){var daysSinceEpoch$677 = ((r$676 / 1000.0) / 3600.0) / 24.0;
var n$678 = basis$0Real$1.round$653(daysSinceEpoch$677);
var date$679;
var v$2323;
var v$681 = 7;
var v$685 = [0,basis$0Time$1.zeroTime$60];
v$2323 = [SmlPrims.chk_ovf_i32(1 + n$678),0,0,v$681,v$685,0,1970];
date$679 = (basis$0Date$1.date$1029(v$2323[0],v$2323[1],v$2323[2],v$2323[3],v$2323[4],v$2323[5],v$2323[6]));
var d$2221;
var v$1622 = basis$0Date$1.year$1069(date$679);
var v$1623;
switch (basis$0Date$1.month$1078(date$679)) { case 7: {v$1623 = 1;
 break; }case 8: {v$1623 = 2;
 break; }case 4: {v$1623 = 3;
 break; }case 11: {v$1623 = 4;
 break; }case 3: {v$1623 = 5;
 break; }case 5: {v$1623 = 6;
 break; }case 6: {v$1623 = 7;
 break; }case 10: {v$1623 = 8;
 break; }case 0: {v$1623 = 9;
 break; }case 1: {v$1623 = 10;
 break; }case 2: {v$1623 = 11;
 break; }default: {v$1623 = 12;
} };
d$2221 = [basis$0Date$1.day$1087(date$679),v$1623,v$1622];
var v$2222 = fromYMDopt$125(d$2221[0],d$2221[1],d$2221[2]);
switch (v$2222[0]) { case 0: {return v$2222[1];
 break; }default: {var v$2223 = d$2221[2];
var v$2225 = d$2221[1];
var v$2226 = d$2221[0];
var s$2224 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2223))) + ",month=") + (basis$0Int32$1.toString$458(v$2225))) + ",day=") + (basis$0Int32$1.toString$458(v$2226))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2224];
} };
};
isodate$0isodate$1.zipTimeseries$687 = function(v$747,v$748){var fix$2445 = {};
fix$2445.$aux = function(v$704,v$707,v$710){lab$aux: while (true) {if (v$704 == null) {return v$710;
} else {if (v$707 == null) {return v$710;
} else {var v$736 = v$704;
var v$737 = v$736[0];
var v$738 = v$737[0];
var v$739 = v$737[1];
var v$740 = v$736[1];
var v$741 = v$707;
var v$742 = v$741[0];
var v$743 = v$742[0];
var v$744 = v$742[1];
var v$745 = v$741[1];
switch (basis$0Word32$1.compare$469(v$738,v$743)) { case 2: {var t$2449 = v$740;
var t$2450 = v$745;
var t$2451 = [[v$738,[v$739,v$744]],v$710];
var v$704 = t$2449;
var v$707 = t$2450;
var v$710 = t$2451;
continue lab$aux;
 break; }case 0: {var t$2446 = v$740;
var t$2447 = [[v$743,v$744],v$745];
var t$2448 = v$710;
var v$704 = t$2446;
var v$707 = t$2447;
var v$710 = t$2448;
continue lab$aux;
 break; }default: {var t$2452 = [[v$738,v$739],v$740];
var t$2453 = v$745;
var t$2454 = v$710;
var v$704 = t$2452;
var v$707 = t$2453;
var v$710 = t$2454;
continue lab$aux;
} };
};
};
};
};
var aux$701 = fix$2445.$aux;
return basis$0List$1.rev$682(aux$701(listsort$0ListSort$1.sort$54(function(v$1630){var v$1631 = v$1630[0];
var v$1632 = v$1631[0];
var v$1633 = v$1630[1];
var v$1634 = v$1633[0];
return basis$0Word32$1.compare$469(v$1632,v$1634);
},v$747),listsort$0ListSort$1.sort$54(function(v$1638){var v$1639 = v$1638[0];
var v$1640 = v$1639[0];
var v$1641 = v$1638[1];
var v$1642 = v$1641[0];
return basis$0Word32$1.compare$469(v$1640,v$1642);
},v$748),null));
};
isodate$0isodate$1.zipTimeseriesPartial$749 = function(v$830,v$831){var fix$2455 = {};
fix$2455.$aux = function(v$766,v$769,v$772){lab$aux: while (true) {if (v$766 == null) {if (v$769 == null) {return v$772;
} else {var v$800 = v$769;
var v$801 = v$800[0];
var v$802 = v$801[0];
var v$803 = v$801[1];
var v$804 = v$800[1];
var t$2456 = null;
var t$2457 = v$804;
var t$2458 = [[v$802,[[1],[0,v$803]]],v$772];
var v$766 = t$2456;
var v$769 = t$2457;
var v$772 = t$2458;
continue lab$aux;
};
} else {if (v$769 == null) {var v$807 = v$766;
var v$808 = v$807[0];
var v$809 = v$808[0];
var v$810 = v$808[1];
var v$811 = v$807[1];
var t$2459 = v$811;
var t$2460 = null;
var t$2461 = [[v$809,[[0,v$810],[1]]],v$772];
var v$766 = t$2459;
var v$769 = t$2460;
var v$772 = t$2461;
continue lab$aux;
} else {var v$819 = v$766;
var v$820 = v$819[0];
var v$821 = v$820[0];
var v$822 = v$820[1];
var v$823 = v$819[1];
var v$824 = v$769;
var v$825 = v$824[0];
var v$826 = v$825[0];
var v$827 = v$825[1];
var v$828 = v$824[1];
switch (basis$0Word32$1.compare$469(v$821,v$826)) { case 2: {var t$2465 = v$823;
var t$2466 = v$828;
var t$2467 = [[v$821,[[0,v$822],[0,v$827]]],v$772];
var v$766 = t$2465;
var v$769 = t$2466;
var v$772 = t$2467;
continue lab$aux;
 break; }case 0: {var t$2462 = v$823;
var t$2463 = [[v$826,v$827],v$828];
var t$2464 = [[v$821,[[0,v$822],[1]]],v$772];
var v$766 = t$2462;
var v$769 = t$2463;
var v$772 = t$2464;
continue lab$aux;
 break; }default: {var t$2468 = [[v$821,v$822],v$823];
var t$2469 = v$828;
var t$2470 = [[v$826,[[1],[0,v$827]]],v$772];
var v$766 = t$2468;
var v$769 = t$2469;
var v$772 = t$2470;
continue lab$aux;
} };
};
};
};
};
var aux$763 = fix$2455.$aux;
return basis$0List$1.rev$682(aux$763(listsort$0ListSort$1.sort$54(function(v$1652){var v$1653 = v$1652[0];
var v$1654 = v$1653[0];
var v$1655 = v$1652[1];
var v$1656 = v$1655[0];
return basis$0Word32$1.compare$469(v$1654,v$1656);
},v$830),listsort$0ListSort$1.sort$54(function(v$1660){var v$1661 = v$1660[0];
var v$1662 = v$1661[0];
var v$1663 = v$1660[1];
var v$1664 = v$1663[0];
return basis$0Word32$1.compare$469(v$1662,v$1664);
},v$831),null));
};
isodate$0isodate$1.toString$877 = function(v$893,v$892){var t$2473;
var t$2472;
var s$1688 = basis$0Int32$1.toString$458(v$892);
t$2472 = ((s$1688.length == 1)?("0" + s$1688):s$1688);
t$2473 = (t$2472 + "/");
var t$2471;
var s$1690 = basis$0Int32$1.toString$458(v$893);
t$2471 = ((s$1690.length == 1)?("0" + s$1690):s$1690);
return t$2473 + t$2471;
};
isodate$0isodate$1.fromString$894 = function(s$897){var v$905 = basis$0String$1.tokens$224(function(v$940){switch (v$940) { case 47: {return true;
 break; }case 45: {return true;
 break; }default: {return false;
} };
},s$897);
if (v$905 == null) {return [1];
} else {var v$907 = v$905;
var v$908 = v$907[1];
if (v$908 == null) {return [1];
} else {var v$910 = v$908;
if (v$910[1] == null) {var v$932 = v$907[0];
var v$933 = v$910[0];
var v$2005 = basis$0Int32$1.fromString$462(v$932);
var v$2006 = basis$0Int32$1.fromString$462(v$933);
switch (v$2005[0]) { case 0: {switch (v$2006[0]) { case 0: {var v$929 = v$2005[1];
var v$930 = v$2006[1];
var t$2481;
if (v$930 > 0) {if ((v$929 == 2)?(v$930 <= 29):false) {t$2481 = true;
} else {var t$2480;
var t$2479;
var fix$2477 = {};
fix$2477.$exists = function(v$1697){lab$exists: while (true) {if (v$1697 == null) {return false;
} else {var v$1698 = v$1697;
var v$1699 = v$1698[0];
var v$1700 = v$1698[1];
if (v$1699 == v$929) {return true;
} else {var t$2478 = v$1700;
var v$1697 = t$2478;
continue lab$exists;
};
};
};
};
var exists$1696 = fix$2477.$exists;
t$2479 = (exists$1696([1,[3,[5,[7,[8,[10,[12,null]]]]]]]));
t$2480 = (t$2479?(v$930 <= 31):false);
if (t$2480) {t$2481 = true;
} else {var t$2476;
var fix$2474 = {};
fix$2474.$exists = function(v$1702){lab$exists: while (true) {if (v$1702 == null) {return false;
} else {var v$1703 = v$1702;
var v$1704 = v$1703[0];
var v$1705 = v$1703[1];
if (v$1704 == v$929) {return true;
} else {var t$2475 = v$1705;
var v$1702 = t$2475;
continue lab$exists;
};
};
};
};
var exists$1701 = fix$2474.$exists;
t$2476 = (exists$1701([4,[6,[9,[11,null]]]]));
t$2481 = (t$2476?(v$930 <= 30):false);
};
};
} else {t$2481 = false;
};
return t$2481?[0,[v$930,v$929]]:[1];
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
} else {return [1];
};
};
};
};
var fromYMDfixNonLeapDay$952 = function(v$976,v$975,v$974){var day$958;
var t$2484;
if (v$975 == 2) {if (v$976 == 29) {var t$2483;
if ((SmlPrims.mod_i32(v$974,4,CompilerInitial.exn$Div$47)) == 0) {var t$2482;
var v$2007 = SmlPrims.mod_i32(v$974,100,CompilerInitial.exn$Div$47);
t$2482 = ((v$2007 == 0)?false:true);
t$2483 = (t$2482?true:((SmlPrims.mod_i32(v$974,400,CompilerInitial.exn$Div$47)) == 0));
} else {t$2483 = false;
};
t$2484 = (t$2483?false:true);
} else {t$2484 = false;
};
} else {t$2484 = false;
};
day$958 = (t$2484?28:v$976);
var v$2228 = fromYMDopt$125(day$958,v$975,v$974);
switch (v$2228[0]) { case 0: {return v$2228[1];
 break; }default: {var s$2230 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$974))) + ",month=") + (basis$0Int32$1.toString$458(v$975))) + ",day=") + (basis$0Int32$1.toString$458(day$958))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2230];
} };
};
var numNext1$977 = function(v$1005,v$1004){return function(d$984){var v$1002;
var v$1720 = SmlPrims.chk_ovf_i32(d$984 >>> 9);
var v$1725 = SmlPrims.chk_ovf_i32(15 & (d$984 >>> 5));
v$1002 = [SmlPrims.chk_ovf_i32(31 & d$984),v$1725,v$1720];
var v$1003 = v$1002[2];
var d1$987 = fromYMDfixNonLeapDay$952(v$1005,v$1004,v$1003);
var v$995;
if (d1$987 >= d$984) {var t$2487;
var t$2486;
var v$2324;
var v$2236 = SmlPrims.chk_ovf_i32(d1$987 >>> 9);
var v$2237 = SmlPrims.chk_ovf_i32(15 & (d1$987 >>> 5));
v$2324 = [SmlPrims.chk_ovf_i32(31 & d1$987),v$2237,v$2236];
t$2486 = (todaynumber$347(v$2324[0],v$2324[1],v$2324[2]));
var t$2485;
var v$2325;
var v$2238 = SmlPrims.chk_ovf_i32(d$984 >>> 9);
var v$2239 = SmlPrims.chk_ovf_i32(15 & (d$984 >>> 5));
v$2325 = [SmlPrims.chk_ovf_i32(31 & d$984),v$2239,v$2238];
t$2485 = (todaynumber$347(v$2325[0],v$2325[1],v$2325[2]));
t$2487 = (SmlPrims.chk_ovf_i32(t$2486 - t$2485));
v$995 = [0,t$2487];
} else {v$995 = [1];
};
switch (v$995[0]) { case 0: {return v$995[1];
 break; }default: {var d2$998 = fromYMDfixNonLeapDay$952(v$1005,v$1004,SmlPrims.chk_ovf_i32(v$1003 + 1));
var t$2489;
var v$2326;
var v$2243 = SmlPrims.chk_ovf_i32(d2$998 >>> 9);
var v$2244 = SmlPrims.chk_ovf_i32(15 & (d2$998 >>> 5));
v$2326 = [SmlPrims.chk_ovf_i32(31 & d2$998),v$2244,v$2243];
t$2489 = (todaynumber$347(v$2326[0],v$2326[1],v$2326[2]));
var t$2488;
var v$2327;
var v$2245 = SmlPrims.chk_ovf_i32(d$984 >>> 9);
var v$2246 = SmlPrims.chk_ovf_i32(15 & (d$984 >>> 5));
v$2327 = [SmlPrims.chk_ovf_i32(31 & d$984),v$2246,v$2245];
t$2488 = (todaynumber$347(v$2327[0],v$2327[1],v$2327[2]));
return SmlPrims.chk_ovf_i32(t$2489 - t$2488);
} };
};
};
var fix$2490 = {};
fix$2490.$numNext = function(v$1009,v$1012){if (v$1009 == null) {throw [basis$0Initial$1.en$Fail$54,"ISOdate.MonthDay.numNext called with empty list argument"];
} else {var v$1027 = v$1009;
var v$1028 = v$1027[1];
if (v$1028 == null) {var v$1029 = v$1027[0];
return (numNext1$977(v$1029[0],v$1029[1]))(v$1012);
} else {var v$1031 = v$1027[0];
var v$2021 = (numNext1$977(v$1031[0],v$1031[1]))(v$1012);
var v$2022 = fix$2490.$numNext(v$1028,v$1012);
return (v$2021 < v$2022)?v$2021:v$2022;
};
};
};
isodate$0isodate$1.numNext$1006 = fix$2490.$numNext;
var numPrev1$1033 = function(v$1061,v$1060){return function(d$1040){var v$1058;
var v$1739 = SmlPrims.chk_ovf_i32(d$1040 >>> 9);
var v$1744 = SmlPrims.chk_ovf_i32(15 & (d$1040 >>> 5));
v$1058 = [SmlPrims.chk_ovf_i32(31 & d$1040),v$1744,v$1739];
var v$1059 = v$1058[2];
var d1$1043 = fromYMDfixNonLeapDay$952(v$1061,v$1060,v$1059);
var v$1051;
if (d$1040 >= d1$1043) {var t$2493;
var t$2492;
var v$2328;
var v$2250 = SmlPrims.chk_ovf_i32(d$1040 >>> 9);
var v$2251 = SmlPrims.chk_ovf_i32(15 & (d$1040 >>> 5));
v$2328 = [SmlPrims.chk_ovf_i32(31 & d$1040),v$2251,v$2250];
t$2492 = (todaynumber$347(v$2328[0],v$2328[1],v$2328[2]));
var t$2491;
var v$2329;
var v$2252 = SmlPrims.chk_ovf_i32(d1$1043 >>> 9);
var v$2253 = SmlPrims.chk_ovf_i32(15 & (d1$1043 >>> 5));
v$2329 = [SmlPrims.chk_ovf_i32(31 & d1$1043),v$2253,v$2252];
t$2491 = (todaynumber$347(v$2329[0],v$2329[1],v$2329[2]));
t$2493 = (SmlPrims.chk_ovf_i32(t$2492 - t$2491));
v$1051 = [0,t$2493];
} else {v$1051 = [1];
};
switch (v$1051[0]) { case 0: {return v$1051[1];
 break; }default: {var d2$1054 = fromYMDfixNonLeapDay$952(v$1061,v$1060,SmlPrims.chk_ovf_i32(v$1059 - 1));
var t$2495;
var v$2330;
var v$2257 = SmlPrims.chk_ovf_i32(d$1040 >>> 9);
var v$2258 = SmlPrims.chk_ovf_i32(15 & (d$1040 >>> 5));
v$2330 = [SmlPrims.chk_ovf_i32(31 & d$1040),v$2258,v$2257];
t$2495 = (todaynumber$347(v$2330[0],v$2330[1],v$2330[2]));
var t$2494;
var v$2331;
var v$2259 = SmlPrims.chk_ovf_i32(d2$1054 >>> 9);
var v$2260 = SmlPrims.chk_ovf_i32(15 & (d2$1054 >>> 5));
v$2331 = [SmlPrims.chk_ovf_i32(31 & d2$1054),v$2260,v$2259];
t$2494 = (todaynumber$347(v$2331[0],v$2331[1],v$2331[2]));
return SmlPrims.chk_ovf_i32(t$2495 - t$2494);
} };
};
};
var fix$2496 = {};
fix$2496.$numPrev = function(v$1065,v$1068){if (v$1065 == null) {throw [basis$0Initial$1.en$Fail$54,"ISOdate.MonthDay.numPrev called with empty list argument"];
} else {var v$1083 = v$1065;
var v$1084 = v$1083[1];
if (v$1084 == null) {var v$1085 = v$1083[0];
return (numPrev1$1033(v$1085[0],v$1085[1]))(v$1068);
} else {var v$1087 = v$1083[0];
var v$2033 = (numPrev1$1033(v$1087[0],v$1087[1]))(v$1068);
var v$2034 = fix$2496.$numPrev(v$1084,v$1068);
return (v$2033 < v$2034)?v$2033:v$2034;
};
};
};
isodate$0isodate$1.numPrev$1062 = fix$2496.$numPrev;
isodate$0isodate$1.prevDate$1127 = function(mds$1130,d$1133){var mdis$1134 = basis$0List$1.map$697(function(md$1137){return [md$1137,(numPrev1$1033(md$1137[0],md$1137[1]))(d$1133)];
},mds$1130);
var v$1165;
var v$1173;
var fix$2497 = {};
fix$2497.$least = function(v$2302){if (v$2302 == null) {return [1];
} else {var v$2303 = v$2302;
var v$2304 = v$2303[1];
if (v$2304 == null) {var v$2305 = v$2303[0];
return [0,v$2305];
} else {var v$2306 = v$2303[0];
var v$2307 = fix$2497.$least(v$2304);
switch (v$2307[0]) { case 1: {return [0,v$2306];
 break; }default: {var v$2308 = v$2307[1];
return (v$2306[1] < v$2308[1])?[0,v$2306]:[0,v$2308];
} };
};
};
};
var least$2301 = fix$2497.$least;
v$1173 = (least$2301(mdis$1134));
switch (v$1173[0]) { case 0: {v$1165 = v$1173[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"ISODate.prevDate.empty list of mds"];
} };
var v$1166 = v$1165[0];
var v$1167 = v$1166[1];
var v$1168 = v$1166[0];
var v$1161;
var v$1760 = SmlPrims.chk_ovf_i32(d$1133 >>> 9);
var v$1765 = SmlPrims.chk_ovf_i32(15 & (d$1133 >>> 5));
v$1161 = [SmlPrims.chk_ovf_i32(31 & d$1133),v$1765,v$1760];
var v$1162 = v$1161[2];
var v$1163 = v$1161[1];
var v$1164 = v$1161[0];
var year$1145 = ((v$1167 > v$1163)?true:((v$1167 == v$1163)?(v$1168 > v$1164):false))?(SmlPrims.chk_ovf_i32(v$1162 - 1)):v$1162;
var v$2262 = fromYMDopt$125(v$1168,v$1167,year$1145);
switch (v$2262[0]) { case 0: {return v$2262[1];
 break; }default: {var s$2264 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(year$1145))) + ",month=") + (basis$0Int32$1.toString$458(v$1167))) + ",day=") + (basis$0Int32$1.toString$458(v$1168))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2264];
} };
};
isodate$0isodate$1.dateFilter$1184 = function(fromDate$1187,toDate$1190,f$1193){return function(v$2333){return basis$0List$1.filter$417(function(x$2334){var date$2335 = f$1193(x$2334);
return (fromDate$1187 <= date$2335)?(date$2335 <= toDate$1190):false;
},v$2333);
};
};
isodate$0isodate$1.fromExcel1900$1202 = function(n$1205){if (n$1205 < 1) {throw [basis$0Initial$1.en$Fail$54,"ISODate.fromExcel1900 expects a positive argument"];
} else {var n$1210 = (n$1205 <= 60)?n$1205:(SmlPrims.chk_ovf_i32(n$1205 - 1));
var d$1783;
var v$2058 = 7;
d$1783 = (basis$0Date$1.date$1029(n$1210,0,0,v$2058,[0,basis$0Time$1.zeroTime$60],0,1900));
var d$2267;
var v$1784 = basis$0Date$1.year$1069(d$1783);
var v$1785;
switch (basis$0Date$1.month$1078(d$1783)) { case 7: {v$1785 = 1;
 break; }case 8: {v$1785 = 2;
 break; }case 4: {v$1785 = 3;
 break; }case 11: {v$1785 = 4;
 break; }case 3: {v$1785 = 5;
 break; }case 5: {v$1785 = 6;
 break; }case 6: {v$1785 = 7;
 break; }case 10: {v$1785 = 8;
 break; }case 0: {v$1785 = 9;
 break; }case 1: {v$1785 = 10;
 break; }case 2: {v$1785 = 11;
 break; }default: {v$1785 = 12;
} };
d$2267 = [basis$0Date$1.day$1087(d$1783),v$1785,v$1784];
var v$2268 = fromYMDopt$125(d$2267[0],d$2267[1],d$2267[2]);
switch (v$2268[0]) { case 0: {return v$2268[1];
 break; }default: {var v$2269 = d$2267[2];
var v$2271 = d$2267[1];
var v$2272 = d$2267[0];
var s$2270 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2269))) + ",month=") + (basis$0Int32$1.toString$458(v$2271))) + ",day=") + (basis$0Int32$1.toString$458(v$2272))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2270];
} };
};
};
isodate$0isodate$1.fromExcel1904$1218 = function(n$1221){if (n$1221 < 1) {throw [basis$0Initial$1.en$Fail$54,"ISODate.fromExcel1904 expects a positive argument"];
} else {var d$1792;
var v$1795;
var v$1227 = 7;
v$1795 = [SmlPrims.chk_ovf_i32(n$1221 + 1),v$1227,1904];
var v$1796 = v$1795[2];
var v$1797 = v$1795[1];
var v$1798 = v$1795[0];
d$1792 = (basis$0Date$1.date$1029(v$1798,0,0,v$1797,[0,basis$0Time$1.zeroTime$60],0,v$1796));
var d$2273;
var v$1793 = basis$0Date$1.year$1069(d$1792);
var v$1794;
switch (basis$0Date$1.month$1078(d$1792)) { case 7: {v$1794 = 1;
 break; }case 8: {v$1794 = 2;
 break; }case 4: {v$1794 = 3;
 break; }case 11: {v$1794 = 4;
 break; }case 3: {v$1794 = 5;
 break; }case 5: {v$1794 = 6;
 break; }case 6: {v$1794 = 7;
 break; }case 10: {v$1794 = 8;
 break; }case 0: {v$1794 = 9;
 break; }case 1: {v$1794 = 10;
 break; }case 2: {v$1794 = 11;
 break; }default: {v$1794 = 12;
} };
d$2273 = [basis$0Date$1.day$1087(d$1792),v$1794,v$1793];
var v$2274 = fromYMDopt$125(d$2273[0],d$2273[1],d$2273[2]);
switch (v$2274[0]) { case 0: {return v$2274[1];
 break; }default: {var v$2275 = d$2273[2];
var v$2277 = d$2273[1];
var v$2278 = d$2273[0];
var s$2276 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$458(v$2275))) + ",month=") + (basis$0Int32$1.toString$458(v$2277))) + ",day=") + (basis$0Int32$1.toString$458(v$2278))) + "}");
throw [basis$0Initial$1.en$Fail$54,"ISODate." + s$2276];
} };
};
};
return 0;
})();
