if ((typeof(basis$0Byte$1)) == "undefined") {basis$0Byte$1 = {};
};
(function(){basis$0Byte$1.byteToChar$50 = function(x$53){return x$53;
};
basis$0Byte$1.charToByte$54 = function(x$57){return x$57;
};
basis$0Byte$1.bytesToString$58 = function(x$61){return x$61;
};
basis$0Byte$1.stringToBytes$62 = function(x$65){return x$65;
};
basis$0Byte$1.unpackStringVec$66 = function(v$72,v$73,v$74){var v$132 = basis$0ByteSlice$1$6.slice$1300(v$72,v$73,[0,v$74]);
var v$133 = v$132[0];
var v$134 = v$132[1];
var v$135 = v$132[2];
var newvec$136 = Array(v$135);
var fix$149 = {};
fix$149.$copy = function(j$138){lab$copy: while (true) {if (j$138 < v$135) {(newvec$136[j$138] = (v$133.charCodeAt(SmlPrims.chk_ovf_i32(v$134 + j$138))),0);
var t$150 = SmlPrims.chk_ovf_i32(j$138 + 1);
var j$138 = t$150;
continue lab$copy;
} else {return 0;
};
};
};
var copy$137 = fix$149.$copy;
copy$137(0);
return SmlPrims.charArrayToString(newvec$136);
};
basis$0Byte$1.unpackString$75 = function(v$81,v$82,v$83){var v$140 = basis$0ByteSlice$1$12.slice$3450(v$81,v$82,[0,v$83]);
var v$141 = v$140[0];
var v$142 = v$140[1];
var v$143 = v$140[2];
var newvec$144 = Array(v$143);
var fix$151 = {};
fix$151.$copy = function(j$146){lab$copy: while (true) {if (j$146 < v$143) {(newvec$144[j$146] = v$141[SmlPrims.chk_ovf_i32(v$142 + j$146)],0);
var t$152 = SmlPrims.chk_ovf_i32(j$146 + 1);
var j$146 = t$152;
continue lab$copy;
} else {return 0;
};
};
};
var copy$145 = fix$151.$copy;
copy$145(0);
return SmlPrims.charArrayToString(newvec$144);
};
basis$0Byte$1.packString$84 = function(v$102,v$103,v$104){var v$99 = v$104[0];
var v$100 = v$104[1];
var v$101 = v$104[2];
var src$94 = basis$0ByteSlice$1$6.slice$1300(v$99,v$100,[0,v$101]);
return basis$0ByteSlice$1$12.copyVec$3611(v$103,v$102,src$94);
};
return 0;
})();
