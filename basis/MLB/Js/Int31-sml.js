if ((typeof(basis$0Int31$1)) == "undefined") {basis$0Int31$1 = {};
};
(function(){basis$0Int31$1.quot$51 = function(v$60,v$61){if (v$61 == 0) {throw CompilerInitial.exn$Div$45;
} else {return SmlPrims.chk_ovf_i31(SmlPrims.quot(v$60,v$61));
};
};
basis$0Int31$1.rem$62 = function(v$71,v$72){if (v$72 == 0) {throw CompilerInitial.exn$Div$45;
} else {return v$71 % v$72;
};
};
basis$0Int31$1.toLarge$81 = function(x$84){return basis$0IntInfRep$1.fromInt31$1047(x$84);
};
basis$0Int31$1.fromLarge$85 = function(x$88){return basis$0IntInfRep$1.toInt31$1027(x$88);
};
basis$0Int31$1.toInt$89 = function(x$92){return x$92;
};
basis$0Int31$1.fromInt$93 = function(x$96){return SmlPrims.chk_ovf_i31(x$96);
};
basis$0Int31$1.precision$97 = [0,31];
basis$0Int31$1.maxInt$98 = [0,1073741823];
basis$0Int31$1.minInt$99 = [0,-1073741824];
basis$0Int31$1.s$p$100 = function(v$101){return SmlPrims.chk_ovf_i31(-(v$101));
};
basis$0Int31$1.s$t$102 = function(v$635,v$636){return SmlPrims.chk_ovf_i31(v$635 * v$636);
};
basis$0Int31$1.div$104 = function(v$637,v$638){return SmlPrims.div_i31(v$637,v$638,CompilerInitial.exn$Div$45);
};
basis$0Int31$1.mod$106 = function(v$639,v$640){return SmlPrims.mod_i31(v$639,v$640,CompilerInitial.exn$Div$45);
};
basis$0Int31$1.s$f$108 = function(v$641,v$642){return SmlPrims.chk_ovf_i31(v$641 + v$642);
};
basis$0Int31$1.s$g$110 = function(v$643,v$644){return SmlPrims.chk_ovf_i31(v$643 - v$644);
};
basis$0Int31$1.compare$112 = function(v$125,v$126){return (v$125 < v$126)?0:((v$125 > v$126)?1:2);
};
basis$0Int31$1.abs$127 = function(v$128){return SmlPrims.chk_ovf_i31(Math.abs(v$128));
};
basis$0Int31$1.min$129 = function(v$138,v$139){return (v$138 < v$139)?v$138:v$139;
};
basis$0Int31$1.max$140 = function(v$149,v$150){return (v$149 < v$150)?v$150:v$149;
};
basis$0Int31$1.sign$151 = function(i$154){return (i$154 > 0)?1:((i$154 < 0)?(-1):0);
};
basis$0Int31$1.sameSign$163 = function(v$168,v$169){return ((v$168 > 0)?1:((v$168 < 0)?(-1):0)) == ((v$169 > 0)?1:((v$169 < 0)?(-1):0));
};
var conv$209 = function(radix$212,i$215){var t$676;
var v$579 = [0,i$215];
var v$667 = [v$579,basis$0Int31$1.minInt$99];
t$676 = (basis$0General$1.eq_option$256(function(v$668){return v$668[0] == v$668[1];
},v$667));
if (t$676) {switch (radix$212) { case 2: {return "~1000000000000000000000000000000";
 break; }case 8: {return "~10000000000";
 break; }case 10: {return "~1073741824";
 break; }case 16: {return "~40000000";
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"conv"];
} };
} else {var fix$669 = {};
fix$669.$h = function(v$233,v$236){lab$h: while (true) {switch (v$233) { case 0: {return v$236;
 break; }default: {var t$673 = SmlPrims.div_i31(v$233,radix$212,CompilerInitial.exn$Div$45);
var t$672;
var t$671;
var t$670;
var i$519 = SmlPrims.mod_i31(v$233,radix$212,CompilerInitial.exn$Div$45);
if (i$519 < 10) {var i$520 = SmlPrims.chk_ovf_i31(i$519 + 48);
t$670 = (basis$0Char$1.chr$69(i$520));
} else {var i$522 = SmlPrims.chk_ovf_i31(i$519 + 55);
t$670 = (basis$0Char$1.chr$69(i$522));
};
t$671 = [t$670,v$236];
t$672 = t$671;
var t$674 = t$673;
var t$675 = t$672;
var v$233 = t$674;
var v$236 = t$675;
continue lab$h;
} };
};
};
var h$230 = fix$669.$h;
var t$690;
if (i$215 < 0) {var t$684;
var t$683 = 126;
var t$677;
var n$627 = SmlPrims.chk_ovf_i31(-(i$215));
var t$682 = h$230;
var t$681 = SmlPrims.div_i31(n$627,radix$212,CompilerInitial.exn$Div$45);
var t$680;
var t$679;
var t$678;
var i$628 = SmlPrims.mod_i31(n$627,radix$212,CompilerInitial.exn$Div$45);
if (i$628 < 10) {var i$629 = SmlPrims.chk_ovf_i31(i$628 + 48);
t$678 = (basis$0Char$1.chr$69(i$629));
} else {var i$630 = SmlPrims.chk_ovf_i31(i$628 + 55);
t$678 = (basis$0Char$1.chr$69(i$630));
};
t$679 = [t$678,null];
t$680 = t$679;
t$677 = (t$682(t$681,t$680));
t$684 = [t$683,t$677];
t$690 = t$684;
} else {var t$689 = h$230;
var t$688 = SmlPrims.div_i31(i$215,radix$212,CompilerInitial.exn$Div$45);
var t$687;
var t$686;
var t$685;
var i$632 = SmlPrims.mod_i31(i$215,radix$212,CompilerInitial.exn$Div$45);
if (i$632 < 10) {var i$633 = SmlPrims.chk_ovf_i31(i$632 + 48);
t$685 = (basis$0Char$1.chr$69(i$633));
} else {var i$634 = SmlPrims.chk_ovf_i31(i$632 + 55);
t$685 = (basis$0Char$1.chr$69(i$634));
};
t$686 = [t$685,null];
t$687 = t$686;
t$690 = (t$689(t$688,t$687));
};
return SmlPrims.implode(t$690);
};
};
basis$0Int31$1.scan$255 = function(radix$258,getc$261,source$264){var v$419;
switch (radix$258) { case 3: {v$419 = [function(c$439){return (48 <= c$439)?(c$439 <= 49):false;
},2];
 break; }case 0: {v$419 = [function(c$432){return (48 <= c$432)?(c$432 <= 55):false;
},8];
 break; }case 2: {v$419 = [function(c$534){return (48 <= c$534)?(c$534 <= 57):false;
},10];
 break; }default: {v$419 = [function(c$535){return ((48 <= c$535)?(c$535 <= 57):false)?true:(((97 <= c$535)?(c$535 <= 102):false)?true:((65 <= c$535)?(c$535 <= 70):false));
},16];
} };
var v$420 = v$419[0];
var v$421 = v$419[1];
var dig1$268 = function(v$271,v$274){switch (v$274[0]) { case 1: {return [1];
 break; }default: {var v$334 = v$274[1];
var v$335 = v$334[0];
var v$336 = v$334[1];
var fix$691 = {};
fix$691.$digr = function(res$288,next_val$291,src$294){lab$digr: while (true) {var v$300 = getc$261(src$294);
switch (v$300[0]) { case 1: {return [0,[res$288,src$294]];
 break; }default: {var v$305 = v$300[1];
var v$306 = v$305[0];
var v$307 = v$305[1];
if (v$420(v$306)) {var t$692 = next_val$291([v$421,res$288,((48 <= v$306)?(v$306 <= 57):false)?(SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$306)) - 48)):(SmlPrims.mod_i31(SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$306)) - 55),32,CompilerInitial.exn$Div$45))]);
var t$693 = next_val$291;
var t$694 = v$307;
var res$288 = t$692;
var next_val$291 = t$693;
var src$294 = t$694;
continue lab$digr;
} else {return [0,[res$288,src$294]];
};
} };
};
};
var digr$285 = fix$691.$digr;
var next_val$308 = (v$271 == 1)?(function(v$317){var v$318 = v$317[0];
var v$319 = v$317[1];
var v$320 = v$317[2];
return SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$318 * v$319)) + v$320);
}):(function(v$325){var v$326 = v$325[0];
var v$327 = v$325[1];
var v$328 = v$325[2];
return SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$326 * v$327)) - v$328);
});
if (v$420(v$335)) {return digr$285(SmlPrims.chk_ovf_i31(v$271 * (((48 <= v$335)?(v$335 <= 57):false)?(SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$335)) - 48)):(SmlPrims.mod_i31(SmlPrims.chk_ovf_i31((SmlPrims.chk_ovf_i31(v$335)) - 55),32,CompilerInitial.exn$Div$45)))),next_val$308,v$336);
} else {return [1];
};
} };
};
var hexopt$352 = function(v$355,v$358){switch (v$358[0]) { case 1: {return [1];
 break; }default: {var v$372 = v$358[1];
switch (v$372[0]) { case 48: {var v$394 = v$372[1];
var t$696;
var t$695;
var v$626 = 1;
t$695 = (basis$0StringCvt$1.eq_radix$302(radix$258,v$626));
t$696 = (t$695?false:true);
if (t$696) {var inp$556 = getc$261(v$394);
var v$557 = dig1$268(v$355,inp$556);
switch (v$557[0]) { case 1: {return [0,[0,v$394]];
 break; }default: {return v$557;
} };
} else {var v$388 = getc$261(v$394);
switch (v$388[0]) { case 1: {return [0,[0,v$394]];
 break; }default: {var v$389 = v$388[1];
switch (v$389[0]) { case 120: {var v$392 = v$389[1];
var inp$560 = getc$261(v$392);
var v$561 = dig1$268(v$355,inp$560);
switch (v$561[0]) { case 1: {return [0,[0,v$394]];
 break; }default: {return v$561;
} };
 break; }case 88: {var v$391 = v$389[1];
var inp$564 = getc$261(v$391);
var v$565 = dig1$268(v$355,inp$564);
switch (v$565[0]) { case 1: {return [0,[0,v$394]];
 break; }default: {return v$565;
} };
 break; }default: {var v$569 = dig1$268(v$355,v$388);
switch (v$569[0]) { case 1: {return [0,[0,v$394]];
 break; }default: {return v$569;
} };
} };
} };
};
 break; }default: {return dig1$268(v$355,v$358);
} };
} };
};
var v$570 = getc$261(basis$0StringCvt$1.dropl$246(function(c$577){return (c$577 == 32)?true:((9 <= c$577)?(c$577 <= 13):false);
},getc$261,source$264));
switch (v$570[0]) { case 1: {return [1];
 break; }default: {var v$571 = v$570[1];
switch (v$571[0]) { case 126: {var v$572 = v$571[1];
return hexopt$352(-1,getc$261(v$572));
 break; }case 45: {var v$573 = v$571[1];
return hexopt$352(-1,getc$261(v$573));
 break; }case 43: {var v$574 = v$571[1];
return hexopt$352(1,getc$261(v$574));
 break; }default: {return hexopt$352(1,v$570);
} };
} };
};
basis$0Int31$1.fmt$444 = function(v$447){switch (v$447) { case 3: {return function(v$656){return conv$209(2,v$656);
};
 break; }case 0: {return function(v$658){return conv$209(8,v$658);
};
 break; }case 2: {return function(v$660){return conv$209(10,v$660);
};
 break; }default: {return function(v$662){return conv$209(16,v$662);
};
} };
};
basis$0Int31$1.toString$456 = function(i$459){return conv$209(10,i$459);
};
basis$0Int31$1.fromString$460 = function(s$463){var t$698 = basis$0StringCvt$1.scanString$159;
var t$697;
var v$663 = 2;
t$697 = (function(v$664){return function(v$665){return basis$0Int31$1.scan$255(v$663,v$664,v$665);
};
});
return t$698(t$697,s$463);
};
basis$0Int31$1.s$l$464 = function(v$645,v$646){return v$645 > v$646;
};
basis$0Int31$1.s$lk$466 = function(v$647,v$648){return v$647 >= v$648;
};
basis$0Int31$1.s$j$468 = function(v$649,v$650){return v$649 < v$650;
};
basis$0Int31$1.s$jk$470 = function(v$651,v$652){return v$651 <= v$652;
};
return 0;
})();
