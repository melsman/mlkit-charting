if ((typeof(isodate$0isodate$1)) == "undefined") {isodate$0isodate$1 = {};
};
(function(){var fromYMDopt$121 = function(v$152,v$151,v$150){if (v$150 < 0) {return [1];
} else {if ((v$151 <= 0)?true:(v$151 > 12)) {return [1];
} else {var t$2127;
if (v$152 <= 0) {t$2127 = true;
} else {var t$2126 = v$152;
var t$2123;
switch (v$151) { case 2: {var t$2125;
if ((SmlPrims.mod_i32(v$150,4,CompilerInitial.exn$Div$45)) == 0) {var t$2124;
var v$1762 = SmlPrims.mod_i32(v$150,100,CompilerInitial.exn$Div$45);
t$2124 = ((v$1762 == 0)?false:true);
t$2125 = (t$2124?true:((SmlPrims.mod_i32(v$150,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2125 = false;
};
t$2123 = (t$2125?29:28);
 break; }case 4: {t$2123 = 30;
 break; }case 6: {t$2123 = 30;
 break; }case 9: {t$2123 = 30;
 break; }case 11: {t$2123 = 30;
 break; }default: {t$2123 = 31;
} };
t$2127 = (t$2126 > t$2123);
};
if (t$2127) {return [1];
} else {var t$2122;
var v$1288;
var v$139 = SmlPrims.i32_to_w32(v$150);
var v$140 = SmlPrims.i32_to_w32(v$151);
v$1288 = [SmlPrims.i32_to_w32(v$152),v$140,v$139];
var v$1289 = v$1288[2];
var v$1290 = v$1288[1];
var v$1291 = v$1288[0];
t$2122 = ((((((((v$1289 << (4 & 31)) & 4294967295) + v$1290) & 4294967295) << (5 & 31)) & 4294967295) + v$1291) & 4294967295);
return [0,t$2122];
};
};
};
};
isodate$0isodate$1.date$164 = function(x$167){var v$1764 = fromYMDopt$121(x$167[0],x$167[1],x$167[2]);
switch (v$1764[0]) { case 0: {return v$1764[1];
 break; }default: {var v$1765 = x$167[2];
var v$1767 = x$167[1];
var v$1768 = x$167[0];
var s$1766 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1765))) + ",month=") + (basis$0Int32$1.toString$454(v$1767))) + ",day=") + (basis$0Int32$1.toString$454(v$1768))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1766];
} };
};
isodate$0isodate$1.toYMD$175 = function(t$178){var v$179 = SmlPrims.chk_ovf_i32(t$178 >>> 9);
var v$180 = SmlPrims.chk_ovf_i32(15 & (t$178 >>> 5));
return [SmlPrims.chk_ovf_i32(31 & t$178),v$180,v$179];
};
isodate$0isodate$1.year$182 = function(x$1331){return SmlPrims.chk_ovf_i32(x$1331 >>> 9);
};
isodate$0isodate$1.month$183 = function(x$1340){return SmlPrims.chk_ovf_i32(15 & (x$1340 >>> 5));
};
isodate$0isodate$1.day$184 = function(x$1350){return SmlPrims.chk_ovf_i32(31 & x$1350);
};
isodate$0isodate$1.lt$192 = function(v$2065,v$2066){return v$2065 < v$2066;
};
isodate$0isodate$1.lte$199 = function(v$2067,v$2068){return v$2067 <= v$2068;
};
isodate$0isodate$1.min$206 = function(v$215,v$216){return (v$215 < v$216)?v$215:v$216;
};
isodate$0isodate$1.max$217 = function(v$226,v$227){return (v$226 < v$227)?v$227:v$226;
};
isodate$0isodate$1.compare$228 = function(v$233,v$234){return basis$0Word32$1.compare$465(v$233,v$234);
};
isodate$0isodate$1.toStringWithSep$247 = function(sep$250,d$253){var v$258;
var v$1782 = SmlPrims.chk_ovf_i32(d$253 >>> 9);
var v$1783 = SmlPrims.chk_ovf_i32(15 & (d$253 >>> 5));
v$258 = [SmlPrims.chk_ovf_i32(31 & d$253),v$1783,v$1782];
var v$259 = v$258[2];
var v$260 = v$258[1];
var v$261 = v$258[0];
var t$2139;
var t$2138;
var t$2137;
var t$2136;
var fix$2134 = {};
fix$2134.$pad = function(s$1786){lab$pad: while (true) {var sz$1787 = s$1786.length;
if (sz$1787 >= 4) {return s$1786;
} else {var t$2135 = "0" + s$1786;
var s$1786 = t$2135;
continue lab$pad;
};
};
};
var pad$1785 = fix$2134.$pad;
t$2136 = (pad$1785(basis$0Int32$1.toString$454(v$259)));
t$2137 = (t$2136 + sep$250);
var t$2133;
var fix$2131 = {};
fix$2131.$pad = function(s$1792){lab$pad: while (true) {var sz$1793 = s$1792.length;
if (sz$1793 >= 2) {return s$1792;
} else {var t$2132 = "0" + s$1792;
var s$1792 = t$2132;
continue lab$pad;
};
};
};
var pad$1791 = fix$2131.$pad;
t$2133 = (pad$1791(basis$0Int32$1.toString$454(v$260)));
t$2138 = (t$2137 + t$2133);
t$2139 = (t$2138 + sep$250);
var t$2130;
var fix$2128 = {};
fix$2128.$pad = function(s$1798){lab$pad: while (true) {var sz$1799 = s$1798.length;
if (sz$1799 >= 2) {return s$1798;
} else {var t$2129 = "0" + s$1798;
var s$1798 = t$2129;
continue lab$pad;
};
};
};
var pad$1797 = fix$2128.$pad;
t$2130 = (pad$1797(basis$0Int32$1.toString$454(v$261)));
return t$2139 + t$2130;
};
isodate$0isodate$1.toString$262 = function(d$265){return isodate$0isodate$1.toStringWithSep$247("-",d$265);
};
isodate$0isodate$1.next$266 = function(d$269){var v$291;
var v$1803 = SmlPrims.chk_ovf_i32(d$269 >>> 9);
var v$1804 = SmlPrims.chk_ovf_i32(15 & (d$269 >>> 5));
v$291 = [SmlPrims.chk_ovf_i32(31 & d$269),v$1804,v$1803];
var v$292 = v$291[2];
var v$293 = v$291[1];
var v$294 = v$291[0];
var t$2144;
var t$2143 = v$294;
var t$2140;
switch (v$293) { case 2: {var t$2142;
if ((SmlPrims.mod_i32(v$292,4,CompilerInitial.exn$Div$45)) == 0) {var t$2141;
var v$1807 = SmlPrims.mod_i32(v$292,100,CompilerInitial.exn$Div$45);
t$2141 = ((v$1807 == 0)?false:true);
t$2142 = (t$2141?true:((SmlPrims.mod_i32(v$292,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2142 = false;
};
t$2140 = (t$2142?29:28);
 break; }case 4: {t$2140 = 30;
 break; }case 6: {t$2140 = 30;
 break; }case 9: {t$2140 = 30;
 break; }case 11: {t$2140 = 30;
 break; }default: {t$2140 = 31;
} };
t$2144 = (t$2143 < t$2140);
if (t$2144) {var v$2089 = SmlPrims.chk_ovf_i32(v$294 + 1);
var v$1809 = fromYMDopt$121(v$2089,v$293,v$292);
switch (v$1809[0]) { case 0: {return v$1809[1];
 break; }default: {var s$1811 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$292))) + ",month=") + (basis$0Int32$1.toString$454(v$293))) + ",day=") + (basis$0Int32$1.toString$454(v$2089))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1811];
} };
} else {if (v$293 < 12) {var v$2093 = SmlPrims.chk_ovf_i32(v$293 + 1);
var v$1815 = fromYMDopt$121(1,v$2093,v$292);
switch (v$1815[0]) { case 0: {return v$1815[1];
 break; }default: {var s$1817 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$292))) + ",month=") + (basis$0Int32$1.toString$454(v$2093))) + ",day=") + (basis$0Int32$1.toString$454(1))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1817];
} };
} else {var v$2097 = SmlPrims.chk_ovf_i32(v$292 + 1);
var v$1821 = fromYMDopt$121(1,1,v$2097);
switch (v$1821[0]) { case 0: {return v$1821[1];
 break; }default: {var s$1823 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2097))) + ",month=") + (basis$0Int32$1.toString$454(1))) + ",day=") + (basis$0Int32$1.toString$454(1))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1823];
} };
};
};
};
isodate$0isodate$1.prev$295 = function(d$298){var v$320;
var v$1827 = SmlPrims.chk_ovf_i32(d$298 >>> 9);
var v$1828 = SmlPrims.chk_ovf_i32(15 & (d$298 >>> 5));
v$320 = [SmlPrims.chk_ovf_i32(31 & d$298),v$1828,v$1827];
var v$321 = v$320[2];
var v$322 = v$320[1];
var v$323 = v$320[0];
if (v$323 > 1) {var v$2098 = SmlPrims.chk_ovf_i32(v$323 - 1);
var v$1830 = fromYMDopt$121(v$2098,v$322,v$321);
switch (v$1830[0]) { case 0: {return v$1830[1];
 break; }default: {var s$1832 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$321))) + ",month=") + (basis$0Int32$1.toString$454(v$322))) + ",day=") + (basis$0Int32$1.toString$454(v$2098))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1832];
} };
} else {if (v$322 > 1) {var d$1835;
var v$315 = SmlPrims.chk_ovf_i32(v$322 - 1);
var t$2145;
switch (SmlPrims.chk_ovf_i32(v$322 - 1)) { case 2: {var t$2147;
if ((SmlPrims.mod_i32(v$321,4,CompilerInitial.exn$Div$45)) == 0) {var t$2146;
var v$1843 = SmlPrims.mod_i32(v$321,100,CompilerInitial.exn$Div$45);
t$2146 = ((v$1843 == 0)?false:true);
t$2147 = (t$2146?true:((SmlPrims.mod_i32(v$321,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2147 = false;
};
t$2145 = (t$2147?29:28);
 break; }case 4: {t$2145 = 30;
 break; }case 6: {t$2145 = 30;
 break; }case 9: {t$2145 = 30;
 break; }case 11: {t$2145 = 30;
 break; }default: {t$2145 = 31;
} };
d$1835 = [t$2145,v$315,v$321];
var v$1836 = fromYMDopt$121(d$1835[0],d$1835[1],d$1835[2]);
switch (v$1836[0]) { case 0: {return v$1836[1];
 break; }default: {var v$1837 = d$1835[2];
var v$1839 = d$1835[1];
var v$1840 = d$1835[0];
var s$1838 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1837))) + ",month=") + (basis$0Int32$1.toString$454(v$1839))) + ",day=") + (basis$0Int32$1.toString$454(v$1840))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1838];
} };
} else {var v$2103 = SmlPrims.chk_ovf_i32(v$321 - 1);
var v$1845 = fromYMDopt$121(31,12,v$2103);
switch (v$1845[0]) { case 0: {return v$1845[1];
 break; }default: {var s$1847 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2103))) + ",month=") + (basis$0Int32$1.toString$454(12))) + ",day=") + (basis$0Int32$1.toString$454(31))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1847];
} };
};
};
};
var todaynumber$343 = function(v$352,v$351,v$350){var prioryears$349 = SmlPrims.chk_ovf_i32(v$350 - 1);
var t$2158;
var t$2157;
var t$2156;
var t$2155;
var t$2148;
var monthno$1380 = SmlPrims.chk_ovf_i32(v$351 - 1);
var t$2154 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$352 - 1)) + (SmlPrims.chk_ovf_i32(31 * monthno$1380)));
var t$2153;
if (monthno$1380 > 1) {var t$2152 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32(27 + (SmlPrims.chk_ovf_i32(4 * monthno$1380))),10,CompilerInitial.exn$Div$45);
var t$2151;
var t$2150;
if ((SmlPrims.mod_i32(v$350,4,CompilerInitial.exn$Div$45)) == 0) {var t$2149;
var v$1667 = SmlPrims.mod_i32(v$350,100,CompilerInitial.exn$Div$45);
t$2149 = ((v$1667 == 0)?false:true);
t$2150 = (t$2149?true:((SmlPrims.mod_i32(v$350,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2150 = false;
};
t$2151 = (t$2150?1:0);
t$2153 = (SmlPrims.chk_ovf_i32(t$2152 - t$2151));
} else {t$2153 = 0;
};
t$2148 = (SmlPrims.chk_ovf_i32(t$2154 - t$2153));
t$2155 = (SmlPrims.chk_ovf_i32(t$2148 + 1));
t$2156 = (SmlPrims.chk_ovf_i32(t$2155 + (SmlPrims.chk_ovf_i32(365 * prioryears$349))));
t$2157 = (SmlPrims.chk_ovf_i32(t$2156 + (SmlPrims.div_i32(prioryears$349,4,CompilerInitial.exn$Div$45))));
t$2158 = (SmlPrims.chk_ovf_i32(t$2157 - (SmlPrims.div_i32(prioryears$349,100,CompilerInitial.exn$Div$45))));
return SmlPrims.chk_ovf_i32(t$2158 + (SmlPrims.div_i32(prioryears$349,400,CompilerInitial.exn$Div$45)));
};
isodate$0isodate$1.weekday$353 = function(d$356){var t$2159;
var v$2069;
var v$1851 = SmlPrims.chk_ovf_i32(d$356 >>> 9);
var v$1852 = SmlPrims.chk_ovf_i32(15 & (d$356 >>> 5));
v$2069 = [SmlPrims.chk_ovf_i32(31 & d$356),v$1852,v$1851];
t$2159 = (todaynumber$343(v$2069[0],v$2069[1],v$2069[2]));
return SmlPrims.mod_i32(t$2159,7,CompilerInitial.exn$Div$45);
};
isodate$0isodate$1.nextBusiness$379 = function(d$382){var fix$2160 = {};
fix$2160.$nextSkip = function(d$1881){lab$nextSkip: while (true) {var d$1882;
var v$1884;
var v$1892 = SmlPrims.chk_ovf_i32(d$1881 >>> 9);
var v$1893 = SmlPrims.chk_ovf_i32(15 & (d$1881 >>> 5));
v$1884 = [SmlPrims.chk_ovf_i32(31 & d$1881),v$1893,v$1892];
var v$1885 = v$1884[2];
var v$1886 = v$1884[1];
var v$1887 = v$1884[0];
var t$2165;
var t$2164 = v$1887;
var t$2161;
switch (v$1886) { case 2: {var t$2163;
if ((SmlPrims.mod_i32(v$1885,4,CompilerInitial.exn$Div$45)) == 0) {var t$2162;
var v$1896 = SmlPrims.mod_i32(v$1885,100,CompilerInitial.exn$Div$45);
t$2162 = ((v$1896 == 0)?false:true);
t$2163 = (t$2162?true:((SmlPrims.mod_i32(v$1885,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2163 = false;
};
t$2161 = (t$2163?29:28);
 break; }case 4: {t$2161 = 30;
 break; }case 6: {t$2161 = 30;
 break; }case 9: {t$2161 = 30;
 break; }case 11: {t$2161 = 30;
 break; }default: {t$2161 = 31;
} };
t$2165 = (t$2164 < t$2161);
if (t$2165) {var v$2104 = SmlPrims.chk_ovf_i32(v$1887 + 1);
var v$1898 = fromYMDopt$121(v$2104,v$1886,v$1885);
switch (v$1898[0]) { case 0: {d$1882 = v$1898[1];
 break; }default: {var s$1900 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1885))) + ",month=") + (basis$0Int32$1.toString$454(v$1886))) + ",day=") + (basis$0Int32$1.toString$454(v$2104))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1900];
} };
} else {if (v$1886 < 12) {var v$2108 = SmlPrims.chk_ovf_i32(v$1886 + 1);
var v$1904 = fromYMDopt$121(1,v$2108,v$1885);
switch (v$1904[0]) { case 0: {d$1882 = v$1904[1];
 break; }default: {var s$1906 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1885))) + ",month=") + (basis$0Int32$1.toString$454(v$2108))) + ",day=") + (basis$0Int32$1.toString$454(1))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1906];
} };
} else {var v$2112 = SmlPrims.chk_ovf_i32(v$1885 + 1);
var v$1910 = fromYMDopt$121(1,1,v$2112);
switch (v$1910[0]) { case 0: {d$1882 = v$1910[1];
 break; }default: {var s$1912 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2112))) + ",month=") + (basis$0Int32$1.toString$454(1))) + ",day=") + (basis$0Int32$1.toString$454(1))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1912];
} };
};
};
var t$2167;
var wd$1916;
var t$2166;
var v$2070;
var v$1918 = SmlPrims.chk_ovf_i32(d$1882 >>> 9);
var v$1919 = SmlPrims.chk_ovf_i32(15 & (d$1882 >>> 5));
v$2070 = [SmlPrims.chk_ovf_i32(31 & d$1882),v$1919,v$1918];
t$2166 = (todaynumber$343(v$2070[0],v$2070[1],v$2070[2]));
wd$1916 = (SmlPrims.mod_i32(t$2166,7,CompilerInitial.exn$Div$45));
t$2167 = ((wd$1916 == 0)?true:(wd$1916 == 6));
if (t$2167) {var t$2168 = d$1882;
var d$1881 = t$2168;
continue lab$nextSkip;
} else {return d$1882;
};
};
};
var nextSkip$1880 = fix$2160.$nextSkip;
return nextSkip$1880(d$382);
};
isodate$0isodate$1.minus$383 = function(v$390,v$391){var t$2170;
var v$2071;
var v$1921 = SmlPrims.chk_ovf_i32(v$390 >>> 9);
var v$1922 = SmlPrims.chk_ovf_i32(15 & (v$390 >>> 5));
v$2071 = [SmlPrims.chk_ovf_i32(31 & v$390),v$1922,v$1921];
t$2170 = (todaynumber$343(v$2071[0],v$2071[1],v$2071[2]));
var t$2169;
var v$2072;
var v$1924 = SmlPrims.chk_ovf_i32(v$391 >>> 9);
var v$1925 = SmlPrims.chk_ovf_i32(15 & (v$391 >>> 5));
v$2072 = [SmlPrims.chk_ovf_i32(31 & v$391),v$1925,v$1924];
t$2169 = (todaynumber$343(v$2072[0],v$2072[1],v$2072[2]));
return SmlPrims.chk_ovf_i32(t$2170 - t$2169);
};
isodate$0isodate$1.epoch$399 = function(d$402){var t$2176;
var t$2175;
var t$2174;
var t$2173;
var t$2172;
var t$2171;
var v$2073;
var v$1927 = SmlPrims.chk_ovf_i32(d$402 >>> 9);
var v$1928 = SmlPrims.chk_ovf_i32(15 & (d$402 >>> 5));
v$2073 = [SmlPrims.chk_ovf_i32(31 & d$402),v$1928,v$1927];
t$2171 = (todaynumber$343(v$2073[0],v$2073[1],v$2073[2]));
t$2172 = (SmlPrims.chk_ovf_i32(t$2171 - (todaynumber$343(1,1,1970))));
t$2173 = t$2172;
t$2174 = (t$2173 * 3600.0);
t$2175 = (t$2174 * 24.0);
t$2176 = (t$2175 * 1000.0);
return t$2176;
};
var readNum$403 = function(v$453,v$454,v$455){var fix$2177 = {};
fix$2177.$read = function(v$2074,v$422,v$2075){lab$read: while (true) {switch (v$422) { case 0: {return [0,v$2075];
 break; }default: {switch (basis$0String$1.sub$97(v$453,v$2074)) { case 48: {var t$2205 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2206 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2207 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 0);
var v$2074 = t$2205;
var v$422 = t$2206;
var v$2075 = t$2207;
continue lab$read;
 break; }case 49: {var t$2202 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2203 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2204 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 1);
var v$2074 = t$2202;
var v$422 = t$2203;
var v$2075 = t$2204;
continue lab$read;
 break; }case 50: {var t$2199 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2200 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2201 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 2);
var v$2074 = t$2199;
var v$422 = t$2200;
var v$2075 = t$2201;
continue lab$read;
 break; }case 51: {var t$2196 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2197 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2198 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 3);
var v$2074 = t$2196;
var v$422 = t$2197;
var v$2075 = t$2198;
continue lab$read;
 break; }case 52: {var t$2193 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2194 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2195 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 4);
var v$2074 = t$2193;
var v$422 = t$2194;
var v$2075 = t$2195;
continue lab$read;
 break; }case 53: {var t$2190 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2191 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2192 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 5);
var v$2074 = t$2190;
var v$422 = t$2191;
var v$2075 = t$2192;
continue lab$read;
 break; }case 54: {var t$2187 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2188 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2189 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 6);
var v$2074 = t$2187;
var v$422 = t$2188;
var v$2075 = t$2189;
continue lab$read;
 break; }case 55: {var t$2184 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2185 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2186 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 7);
var v$2074 = t$2184;
var v$422 = t$2185;
var v$2075 = t$2186;
continue lab$read;
 break; }case 56: {var t$2181 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2182 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2183 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 8);
var v$2074 = t$2181;
var v$422 = t$2182;
var v$2075 = t$2183;
continue lab$read;
 break; }case 57: {var t$2178 = SmlPrims.chk_ovf_i32(v$2074 + 1);
var t$2179 = SmlPrims.chk_ovf_i32(v$422 - 1);
var t$2180 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2075 * 10)) + 9);
var v$2074 = t$2178;
var v$422 = t$2179;
var v$2075 = t$2180;
continue lab$read;
 break; }default: {return [1];
} };
} };
};
};
var read$409 = fix$2177.$read;
return read$409(v$454,v$455,0);
};
isodate$0isodate$1.fromString$456 = function(s$459){var t$2210;
var t$2209;
var v$1671 = s$459.length;
t$2209 = ((v$1671 == 10)?false:true);
if (t$2209) {t$2210 = true;
} else {var t$2208;
var v$1673 = basis$0String$1.sub$97(s$459,4);
t$2208 = ((v$1673 == 45)?false:true);
if (t$2208) {t$2210 = true;
} else {var v$1675 = basis$0String$1.sub$97(s$459,7);
t$2210 = ((v$1675 == 45)?false:true);
};
};
if (t$2210) {return [1];
} else {var v$1677 = readNum$403(s$459,0,4);
var v$1678 = readNum$403(s$459,5,2);
var v$1679 = readNum$403(s$459,8,2);
switch (v$1677[0]) { case 0: {switch (v$1678[0]) { case 0: {switch (v$1679[0]) { case 0: {var v$482 = v$1677[1];
var v$483 = v$1678[1];
var v$484 = v$1679[1];
return fromYMDopt$121(v$484,v$483,v$482);
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
};
};
isodate$0isodate$1.toMonth$494 = function(v$497){switch (v$497) { case 1: {return [0,7];
 break; }case 2: {return [0,8];
 break; }case 3: {return [0,4];
 break; }case 4: {return [0,11];
 break; }case 5: {return [0,3];
 break; }case 6: {return [0,5];
 break; }case 7: {return [0,6];
 break; }case 8: {return [0,10];
 break; }case 9: {return [0,0];
 break; }case 10: {return [0,1];
 break; }case 11: {return [0,2];
 break; }case 12: {return [0,9];
 break; }default: {return [1];
} };
};
isodate$0isodate$1.fromMonth$524 = function(v$527){switch (v$527) { case 7: {return 1;
 break; }case 8: {return 2;
 break; }case 4: {return 3;
 break; }case 11: {return 4;
 break; }case 3: {return 5;
 break; }case 5: {return 6;
 break; }case 6: {return 7;
 break; }case 10: {return 8;
 break; }case 0: {return 9;
 break; }case 1: {return 10;
 break; }case 2: {return 11;
 break; }default: {return 12;
} };
};
var datedate$$568 = function(v$586,v$585,v$584){var v$578;
switch (v$585) { case 1: {v$578 = [0,7];
 break; }case 2: {v$578 = [0,8];
 break; }case 3: {v$578 = [0,4];
 break; }case 4: {v$578 = [0,11];
 break; }case 5: {v$578 = [0,3];
 break; }case 6: {v$578 = [0,5];
 break; }case 7: {v$578 = [0,6];
 break; }case 8: {v$578 = [0,10];
 break; }case 9: {v$578 = [0,0];
 break; }case 10: {v$578 = [0,1];
 break; }case 11: {v$578 = [0,2];
 break; }case 12: {v$578 = [0,9];
 break; }default: {v$578 = [1];
} };
switch (v$578[0]) { case 0: {var v$583 = v$578[1];
return basis$0Date$1.date$1025(v$586,0,0,v$583,[0,basis$0Time$1.zeroTime$56],0,v$584);
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"ISODate.datedate'"];
} };
};
isodate$0isodate$1.toDate$587 = function(d$590){var v$598;
var v$1933 = SmlPrims.chk_ovf_i32(d$590 >>> 9);
var v$1934 = SmlPrims.chk_ovf_i32(15 & (d$590 >>> 5));
v$598 = [SmlPrims.chk_ovf_i32(31 & d$590),v$1934,v$1933];
var v$599 = v$598[2];
var v$600 = v$598[1];
var v$601 = v$598[0];
return datedate$$568(v$601,v$600,v$599);
};
isodate$0isodate$1.fromDate$602 = function(d$605){var d$1935;
var v$606 = basis$0Date$1.year$1065(d$605);
var v$607;
switch (basis$0Date$1.month$1074(d$605)) { case 7: {v$607 = 1;
 break; }case 8: {v$607 = 2;
 break; }case 4: {v$607 = 3;
 break; }case 11: {v$607 = 4;
 break; }case 3: {v$607 = 5;
 break; }case 5: {v$607 = 6;
 break; }case 6: {v$607 = 7;
 break; }case 10: {v$607 = 8;
 break; }case 0: {v$607 = 9;
 break; }case 1: {v$607 = 10;
 break; }case 2: {v$607 = 11;
 break; }default: {v$607 = 12;
} };
d$1935 = [basis$0Date$1.day$1083(d$605),v$607,v$606];
var v$1936 = fromYMDopt$121(d$1935[0],d$1935[1],d$1935[2]);
switch (v$1936[0]) { case 0: {return v$1936[1];
 break; }default: {var v$1937 = d$1935[2];
var v$1939 = d$1935[1];
var v$1940 = d$1935[0];
var s$1938 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1937))) + ",month=") + (basis$0Int32$1.toString$454(v$1939))) + ",day=") + (basis$0Int32$1.toString$454(v$1940))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1938];
} };
};
isodate$0isodate$1.firstInYear$609 = function(date$612){var v$2115 = SmlPrims.chk_ovf_i32(date$612 >>> 9);
var v$1942 = fromYMDopt$121(1,1,v$2115);
switch (v$1942[0]) { case 0: {return v$1942[1];
 break; }default: {var s$1944 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2115))) + ",month=") + (basis$0Int32$1.toString$454(1))) + ",day=") + (basis$0Int32$1.toString$454(1))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1944];
} };
};
isodate$0isodate$1.firstInMonth$616 = function(date$619){var d$1948;
var v$620 = SmlPrims.chk_ovf_i32(date$619 >>> 9);
d$1948 = [1,SmlPrims.chk_ovf_i32(15 & (date$619 >>> 5)),v$620];
var v$1949 = fromYMDopt$121(d$1948[0],d$1948[1],d$1948[2]);
switch (v$1949[0]) { case 0: {return v$1949[1];
 break; }default: {var v$1950 = d$1948[2];
var v$1952 = d$1948[1];
var v$1953 = d$1948[0];
var s$1951 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1950))) + ",month=") + (basis$0Int32$1.toString$454(v$1952))) + ",day=") + (basis$0Int32$1.toString$454(v$1953))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1951];
} };
};
isodate$0isodate$1.minus1Year$623 = function(date$626){var d$1956;
var v$627 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(date$626 >>> 9)) - 1);
var v$628 = SmlPrims.chk_ovf_i32(15 & (date$626 >>> 5));
d$1956 = [SmlPrims.chk_ovf_i32(31 & date$626),v$628,v$627];
var v$1957 = fromYMDopt$121(d$1956[0],d$1956[1],d$1956[2]);
switch (v$1957[0]) { case 0: {return v$1957[1];
 break; }default: {var v$1958 = d$1956[2];
var v$1960 = d$1956[1];
var v$1961 = d$1956[0];
var s$1959 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1958))) + ",month=") + (basis$0Int32$1.toString$454(v$1960))) + ",day=") + (basis$0Int32$1.toString$454(v$1961))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1959];
} };
};
isodate$0isodate$1.minus1Week$630 = function(date$633){var d$1432;
var v$1435;
var v$641 = SmlPrims.chk_ovf_i32(date$633 >>> 9);
var v$642;
var v$638;
switch (SmlPrims.chk_ovf_i32(15 & (date$633 >>> 5))) { case 1: {v$638 = [0,7];
 break; }case 2: {v$638 = [0,8];
 break; }case 3: {v$638 = [0,4];
 break; }case 4: {v$638 = [0,11];
 break; }case 5: {v$638 = [0,3];
 break; }case 6: {v$638 = [0,5];
 break; }case 7: {v$638 = [0,6];
 break; }case 8: {v$638 = [0,10];
 break; }case 9: {v$638 = [0,0];
 break; }case 10: {v$638 = [0,1];
 break; }case 11: {v$638 = [0,2];
 break; }case 12: {v$638 = [0,9];
 break; }default: {v$638 = [1];
} };
switch (v$638[0]) { case 0: {v$642 = v$638[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"ISODate.minus1Week couldn't get month"];
} };
v$1435 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(31 & date$633)) - 7),v$642,v$641];
var v$1436 = v$1435[2];
var v$1437 = v$1435[1];
var v$1438 = v$1435[0];
d$1432 = (basis$0Date$1.date$1025(v$1438,0,0,v$1437,[0,basis$0Time$1.zeroTime$56],0,v$1436));
var d$1968;
var v$1433 = basis$0Date$1.year$1065(d$1432);
var v$1434;
switch (basis$0Date$1.month$1074(d$1432)) { case 7: {v$1434 = 1;
 break; }case 8: {v$1434 = 2;
 break; }case 4: {v$1434 = 3;
 break; }case 11: {v$1434 = 4;
 break; }case 3: {v$1434 = 5;
 break; }case 5: {v$1434 = 6;
 break; }case 6: {v$1434 = 7;
 break; }case 10: {v$1434 = 8;
 break; }case 0: {v$1434 = 9;
 break; }case 1: {v$1434 = 10;
 break; }case 2: {v$1434 = 11;
 break; }default: {v$1434 = 12;
} };
d$1968 = [basis$0Date$1.day$1083(d$1432),v$1434,v$1433];
var v$1969 = fromYMDopt$121(d$1968[0],d$1968[1],d$1968[2]);
switch (v$1969[0]) { case 0: {return v$1969[1];
 break; }default: {var v$1970 = d$1968[2];
var v$1972 = d$1968[1];
var v$1973 = d$1968[0];
var s$1971 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1970))) + ",month=") + (basis$0Int32$1.toString$454(v$1972))) + ",day=") + (basis$0Int32$1.toString$454(v$1973))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1971];
} };
};
isodate$0isodate$1.minusNMonths$644 = function(date$647,N$650){var y$651 = SmlPrims.chk_ovf_i32(date$647 >>> 9);
var N$652 = SmlPrims.mod_i32(N$650,12,CompilerInitial.exn$Div$45);
var y$653 = SmlPrims.chk_ovf_i32(y$651 - (SmlPrims.div_i32(N$652,12,CompilerInitial.exn$Div$45)));
var m$654 = SmlPrims.chk_ovf_i32(15 & (date$647 >>> 5));
var v$662 = ((SmlPrims.chk_ovf_i32(m$654 - N$652)) > 0)?[SmlPrims.chk_ovf_i32(m$654 - N$652),y$653]:[SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(m$654 - N$652)) + 12),SmlPrims.chk_ovf_i32(y$653 - 1)];
var v$663 = v$662[0];
var v$664 = v$662[1];
var d$658 = SmlPrims.chk_ovf_i32(31 & date$647);
var d$1442 = datedate$$568(d$658,v$663,v$664);
var d$1977;
var v$1443 = basis$0Date$1.year$1065(d$1442);
var v$1444;
switch (basis$0Date$1.month$1074(d$1442)) { case 7: {v$1444 = 1;
 break; }case 8: {v$1444 = 2;
 break; }case 4: {v$1444 = 3;
 break; }case 11: {v$1444 = 4;
 break; }case 3: {v$1444 = 5;
 break; }case 5: {v$1444 = 6;
 break; }case 6: {v$1444 = 7;
 break; }case 10: {v$1444 = 8;
 break; }case 0: {v$1444 = 9;
 break; }case 1: {v$1444 = 10;
 break; }case 2: {v$1444 = 11;
 break; }default: {v$1444 = 12;
} };
d$1977 = [basis$0Date$1.day$1083(d$1442),v$1444,v$1443];
var v$1978 = fromYMDopt$121(d$1977[0],d$1977[1],d$1977[2]);
switch (v$1978[0]) { case 0: {return v$1978[1];
 break; }default: {var v$1979 = d$1977[2];
var v$1981 = d$1977[1];
var v$1982 = d$1977[0];
var s$1980 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1979))) + ",month=") + (basis$0Int32$1.toString$454(v$1981))) + ",day=") + (basis$0Int32$1.toString$454(v$1982))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1980];
} };
};
isodate$0isodate$1.fromEpoch$669 = function(r$672){var daysSinceEpoch$673 = ((r$672 / 1000.0) / 3600.0) / 24.0;
var n$674 = basis$0Real$1.round$649(daysSinceEpoch$673);
var date$675;
var v$2076;
var v$677 = 7;
var v$681 = [0,basis$0Time$1.zeroTime$56];
v$2076 = [SmlPrims.chk_ovf_i32(1 + n$674),0,0,v$677,v$681,0,1970];
date$675 = (basis$0Date$1.date$1025(v$2076[0],v$2076[1],v$2076[2],v$2076[3],v$2076[4],v$2076[5],v$2076[6]));
var d$1983;
var v$1449 = basis$0Date$1.year$1065(date$675);
var v$1450;
switch (basis$0Date$1.month$1074(date$675)) { case 7: {v$1450 = 1;
 break; }case 8: {v$1450 = 2;
 break; }case 4: {v$1450 = 3;
 break; }case 11: {v$1450 = 4;
 break; }case 3: {v$1450 = 5;
 break; }case 5: {v$1450 = 6;
 break; }case 6: {v$1450 = 7;
 break; }case 10: {v$1450 = 8;
 break; }case 0: {v$1450 = 9;
 break; }case 1: {v$1450 = 10;
 break; }case 2: {v$1450 = 11;
 break; }default: {v$1450 = 12;
} };
d$1983 = [basis$0Date$1.day$1083(date$675),v$1450,v$1449];
var v$1984 = fromYMDopt$121(d$1983[0],d$1983[1],d$1983[2]);
switch (v$1984[0]) { case 0: {return v$1984[1];
 break; }default: {var v$1985 = d$1983[2];
var v$1987 = d$1983[1];
var v$1988 = d$1983[0];
var s$1986 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$1985))) + ",month=") + (basis$0Int32$1.toString$454(v$1987))) + ",day=") + (basis$0Int32$1.toString$454(v$1988))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1986];
} };
};
isodate$0isodate$1.zipTimeseries$683 = function(v$743,v$744){var fix$2211 = {};
fix$2211.$aux = function(v$700,v$703,v$706){lab$aux: while (true) {if (v$700 == null) {return v$706;
} else {if (v$703 == null) {return v$706;
} else {var v$732 = v$700;
var v$733 = v$732[0];
var v$734 = v$733[0];
var v$735 = v$733[1];
var v$736 = v$732[1];
var v$737 = v$703;
var v$738 = v$737[0];
var v$739 = v$738[0];
var v$740 = v$738[1];
var v$741 = v$737[1];
switch (basis$0Word32$1.compare$465(v$734,v$739)) { case 2: {var t$2215 = v$736;
var t$2216 = v$741;
var t$2217 = [[v$734,[v$735,v$740]],v$706];
var v$700 = t$2215;
var v$703 = t$2216;
var v$706 = t$2217;
continue lab$aux;
 break; }case 0: {var t$2212 = v$736;
var t$2213 = [[v$739,v$740],v$741];
var t$2214 = v$706;
var v$700 = t$2212;
var v$703 = t$2213;
var v$706 = t$2214;
continue lab$aux;
 break; }default: {var t$2218 = [[v$734,v$735],v$736];
var t$2219 = v$741;
var t$2220 = v$706;
var v$700 = t$2218;
var v$703 = t$2219;
var v$706 = t$2220;
continue lab$aux;
} };
};
};
};
};
var aux$697 = fix$2211.$aux;
return basis$0List$1.rev$678(aux$697(listsort$0ListSort$1.sort$50(function(v$1457){var v$1458 = v$1457[0];
var v$1459 = v$1458[0];
var v$1460 = v$1457[1];
var v$1461 = v$1460[0];
return basis$0Word32$1.compare$465(v$1459,v$1461);
},v$743),listsort$0ListSort$1.sort$50(function(v$1465){var v$1466 = v$1465[0];
var v$1467 = v$1466[0];
var v$1468 = v$1465[1];
var v$1469 = v$1468[0];
return basis$0Word32$1.compare$465(v$1467,v$1469);
},v$744),null));
};
isodate$0isodate$1.zipTimeseriesPartial$745 = function(v$826,v$827){var fix$2221 = {};
fix$2221.$aux = function(v$762,v$765,v$768){lab$aux: while (true) {if (v$762 == null) {if (v$765 == null) {return v$768;
} else {var v$796 = v$765;
var v$797 = v$796[0];
var v$798 = v$797[0];
var v$799 = v$797[1];
var v$800 = v$796[1];
var t$2222 = null;
var t$2223 = v$800;
var t$2224 = [[v$798,[[1],[0,v$799]]],v$768];
var v$762 = t$2222;
var v$765 = t$2223;
var v$768 = t$2224;
continue lab$aux;
};
} else {if (v$765 == null) {var v$803 = v$762;
var v$804 = v$803[0];
var v$805 = v$804[0];
var v$806 = v$804[1];
var v$807 = v$803[1];
var t$2225 = v$807;
var t$2226 = null;
var t$2227 = [[v$805,[[0,v$806],[1]]],v$768];
var v$762 = t$2225;
var v$765 = t$2226;
var v$768 = t$2227;
continue lab$aux;
} else {var v$815 = v$762;
var v$816 = v$815[0];
var v$817 = v$816[0];
var v$818 = v$816[1];
var v$819 = v$815[1];
var v$820 = v$765;
var v$821 = v$820[0];
var v$822 = v$821[0];
var v$823 = v$821[1];
var v$824 = v$820[1];
switch (basis$0Word32$1.compare$465(v$817,v$822)) { case 2: {var t$2231 = v$819;
var t$2232 = v$824;
var t$2233 = [[v$817,[[0,v$818],[0,v$823]]],v$768];
var v$762 = t$2231;
var v$765 = t$2232;
var v$768 = t$2233;
continue lab$aux;
 break; }case 0: {var t$2228 = v$819;
var t$2229 = [[v$822,v$823],v$824];
var t$2230 = [[v$817,[[0,v$818],[1]]],v$768];
var v$762 = t$2228;
var v$765 = t$2229;
var v$768 = t$2230;
continue lab$aux;
 break; }default: {var t$2234 = [[v$817,v$818],v$819];
var t$2235 = v$824;
var t$2236 = [[v$822,[[1],[0,v$823]]],v$768];
var v$762 = t$2234;
var v$765 = t$2235;
var v$768 = t$2236;
continue lab$aux;
} };
};
};
};
};
var aux$759 = fix$2221.$aux;
return basis$0List$1.rev$678(aux$759(listsort$0ListSort$1.sort$50(function(v$1479){var v$1480 = v$1479[0];
var v$1481 = v$1480[0];
var v$1482 = v$1479[1];
var v$1483 = v$1482[0];
return basis$0Word32$1.compare$465(v$1481,v$1483);
},v$826),listsort$0ListSort$1.sort$50(function(v$1487){var v$1488 = v$1487[0];
var v$1489 = v$1488[0];
var v$1490 = v$1487[1];
var v$1491 = v$1490[0];
return basis$0Word32$1.compare$465(v$1489,v$1491);
},v$827),null));
};
isodate$0isodate$1.toString$873 = function(v$889,v$888){var t$2239;
var t$2238;
var s$1515 = basis$0Int32$1.toString$454(v$888);
t$2238 = ((s$1515.length == 1)?("0" + s$1515):s$1515);
t$2239 = (t$2238 + "/");
var t$2237;
var s$1517 = basis$0Int32$1.toString$454(v$889);
t$2237 = ((s$1517.length == 1)?("0" + s$1517):s$1517);
return t$2239 + t$2237;
};
isodate$0isodate$1.fromString$890 = function(s$893){var v$901 = basis$0String$1.tokens$220(function(v$936){switch (v$936) { case 47: {return true;
 break; }case 45: {return true;
 break; }default: {return false;
} };
},s$893);
if (v$901 == null) {return [1];
} else {var v$903 = v$901;
var v$904 = v$903[1];
if (v$904 == null) {return [1];
} else {var v$906 = v$904;
if (v$906[1] == null) {var v$928 = v$903[0];
var v$929 = v$906[0];
var v$1719 = basis$0Int32$1.fromString$458(v$928);
var v$1720 = basis$0Int32$1.fromString$458(v$929);
switch (v$1719[0]) { case 0: {switch (v$1720[0]) { case 0: {var v$925 = v$1719[1];
var v$926 = v$1720[1];
var t$2247;
if (v$926 > 0) {if ((v$925 == 2)?(v$926 <= 29):false) {t$2247 = true;
} else {var t$2246;
var t$2245;
var fix$2243 = {};
fix$2243.$exists = function(v$1524){lab$exists: while (true) {if (v$1524 == null) {return false;
} else {var v$1525 = v$1524;
var v$1526 = v$1525[0];
var v$1527 = v$1525[1];
if (v$1526 == v$925) {return true;
} else {var t$2244 = v$1527;
var v$1524 = t$2244;
continue lab$exists;
};
};
};
};
var exists$1523 = fix$2243.$exists;
t$2245 = (exists$1523([1,[3,[5,[7,[8,[10,[12,null]]]]]]]));
t$2246 = (t$2245?(v$926 <= 31):false);
if (t$2246) {t$2247 = true;
} else {var t$2242;
var fix$2240 = {};
fix$2240.$exists = function(v$1529){lab$exists: while (true) {if (v$1529 == null) {return false;
} else {var v$1530 = v$1529;
var v$1531 = v$1530[0];
var v$1532 = v$1530[1];
if (v$1531 == v$925) {return true;
} else {var t$2241 = v$1532;
var v$1529 = t$2241;
continue lab$exists;
};
};
};
};
var exists$1528 = fix$2240.$exists;
t$2242 = (exists$1528([4,[6,[9,[11,null]]]]));
t$2247 = (t$2242?(v$926 <= 30):false);
};
};
} else {t$2247 = false;
};
return t$2247?[0,[v$926,v$925]]:[1];
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
} else {return [1];
};
};
};
};
var fromYMDfixNonLeapDay$948 = function(v$972,v$971,v$970){var day$954;
var t$2250;
if (v$971 == 2) {if (v$972 == 29) {var t$2249;
if ((SmlPrims.mod_i32(v$970,4,CompilerInitial.exn$Div$45)) == 0) {var t$2248;
var v$1721 = SmlPrims.mod_i32(v$970,100,CompilerInitial.exn$Div$45);
t$2248 = ((v$1721 == 0)?false:true);
t$2249 = (t$2248?true:((SmlPrims.mod_i32(v$970,400,CompilerInitial.exn$Div$45)) == 0));
} else {t$2249 = false;
};
t$2250 = (t$2249?false:true);
} else {t$2250 = false;
};
} else {t$2250 = false;
};
day$954 = (t$2250?28:v$972);
var v$1990 = fromYMDopt$121(day$954,v$971,v$970);
switch (v$1990[0]) { case 0: {return v$1990[1];
 break; }default: {var s$1992 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$970))) + ",month=") + (basis$0Int32$1.toString$454(v$971))) + ",day=") + (basis$0Int32$1.toString$454(day$954))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$1992];
} };
};
var numNext1$973 = function(v$1001,v$1000){return function(d$980){var v$998;
var v$1996 = SmlPrims.chk_ovf_i32(d$980 >>> 9);
var v$1997 = SmlPrims.chk_ovf_i32(15 & (d$980 >>> 5));
v$998 = [SmlPrims.chk_ovf_i32(31 & d$980),v$1997,v$1996];
var v$999 = v$998[2];
var d1$983 = fromYMDfixNonLeapDay$948(v$1001,v$1000,v$999);
var v$991;
if (d1$983 >= d$980) {var t$2253;
var t$2252;
var v$2077;
var v$1999 = SmlPrims.chk_ovf_i32(d1$983 >>> 9);
var v$2000 = SmlPrims.chk_ovf_i32(15 & (d1$983 >>> 5));
v$2077 = [SmlPrims.chk_ovf_i32(31 & d1$983),v$2000,v$1999];
t$2252 = (todaynumber$343(v$2077[0],v$2077[1],v$2077[2]));
var t$2251;
var v$2078;
var v$2002 = SmlPrims.chk_ovf_i32(d$980 >>> 9);
var v$2003 = SmlPrims.chk_ovf_i32(15 & (d$980 >>> 5));
v$2078 = [SmlPrims.chk_ovf_i32(31 & d$980),v$2003,v$2002];
t$2251 = (todaynumber$343(v$2078[0],v$2078[1],v$2078[2]));
t$2253 = (SmlPrims.chk_ovf_i32(t$2252 - t$2251));
v$991 = [0,t$2253];
} else {v$991 = [1];
};
switch (v$991[0]) { case 0: {return v$991[1];
 break; }default: {var d2$994 = fromYMDfixNonLeapDay$948(v$1001,v$1000,SmlPrims.chk_ovf_i32(v$999 + 1));
var t$2255;
var v$2079;
var v$2005 = SmlPrims.chk_ovf_i32(d2$994 >>> 9);
var v$2006 = SmlPrims.chk_ovf_i32(15 & (d2$994 >>> 5));
v$2079 = [SmlPrims.chk_ovf_i32(31 & d2$994),v$2006,v$2005];
t$2255 = (todaynumber$343(v$2079[0],v$2079[1],v$2079[2]));
var t$2254;
var v$2080;
var v$2008 = SmlPrims.chk_ovf_i32(d$980 >>> 9);
var v$2009 = SmlPrims.chk_ovf_i32(15 & (d$980 >>> 5));
v$2080 = [SmlPrims.chk_ovf_i32(31 & d$980),v$2009,v$2008];
t$2254 = (todaynumber$343(v$2080[0],v$2080[1],v$2080[2]));
return SmlPrims.chk_ovf_i32(t$2255 - t$2254);
} };
};
};
var fix$2256 = {};
fix$2256.$numNext = function(v$1005,v$1008){if (v$1005 == null) {throw [basis$0Initial$1.en$Fail$50,"ISOdate.MonthDay.numNext called with empty list argument"];
} else {var v$1023 = v$1005;
var v$1024 = v$1023[1];
if (v$1024 == null) {var v$1025 = v$1023[0];
return (numNext1$973(v$1025[0],v$1025[1]))(v$1008);
} else {var v$1027 = v$1023[0];
var v$1731 = (numNext1$973(v$1027[0],v$1027[1]))(v$1008);
var v$1732 = fix$2256.$numNext(v$1024,v$1008);
return (v$1731 < v$1732)?v$1731:v$1732;
};
};
};
isodate$0isodate$1.numNext$1002 = fix$2256.$numNext;
var numPrev1$1029 = function(v$1057,v$1056){return function(d$1036){var v$1054;
var v$2011 = SmlPrims.chk_ovf_i32(d$1036 >>> 9);
var v$2012 = SmlPrims.chk_ovf_i32(15 & (d$1036 >>> 5));
v$1054 = [SmlPrims.chk_ovf_i32(31 & d$1036),v$2012,v$2011];
var v$1055 = v$1054[2];
var d1$1039 = fromYMDfixNonLeapDay$948(v$1057,v$1056,v$1055);
var v$1047;
if (d$1036 >= d1$1039) {var t$2259;
var t$2258;
var v$2081;
var v$2014 = SmlPrims.chk_ovf_i32(d$1036 >>> 9);
var v$2015 = SmlPrims.chk_ovf_i32(15 & (d$1036 >>> 5));
v$2081 = [SmlPrims.chk_ovf_i32(31 & d$1036),v$2015,v$2014];
t$2258 = (todaynumber$343(v$2081[0],v$2081[1],v$2081[2]));
var t$2257;
var v$2082;
var v$2017 = SmlPrims.chk_ovf_i32(d1$1039 >>> 9);
var v$2018 = SmlPrims.chk_ovf_i32(15 & (d1$1039 >>> 5));
v$2082 = [SmlPrims.chk_ovf_i32(31 & d1$1039),v$2018,v$2017];
t$2257 = (todaynumber$343(v$2082[0],v$2082[1],v$2082[2]));
t$2259 = (SmlPrims.chk_ovf_i32(t$2258 - t$2257));
v$1047 = [0,t$2259];
} else {v$1047 = [1];
};
switch (v$1047[0]) { case 0: {return v$1047[1];
 break; }default: {var d2$1050 = fromYMDfixNonLeapDay$948(v$1057,v$1056,SmlPrims.chk_ovf_i32(v$1055 - 1));
var t$2261;
var v$2083;
var v$2020 = SmlPrims.chk_ovf_i32(d$1036 >>> 9);
var v$2021 = SmlPrims.chk_ovf_i32(15 & (d$1036 >>> 5));
v$2083 = [SmlPrims.chk_ovf_i32(31 & d$1036),v$2021,v$2020];
t$2261 = (todaynumber$343(v$2083[0],v$2083[1],v$2083[2]));
var t$2260;
var v$2084;
var v$2023 = SmlPrims.chk_ovf_i32(d2$1050 >>> 9);
var v$2024 = SmlPrims.chk_ovf_i32(15 & (d2$1050 >>> 5));
v$2084 = [SmlPrims.chk_ovf_i32(31 & d2$1050),v$2024,v$2023];
t$2260 = (todaynumber$343(v$2084[0],v$2084[1],v$2084[2]));
return SmlPrims.chk_ovf_i32(t$2261 - t$2260);
} };
};
};
var fix$2262 = {};
fix$2262.$numPrev = function(v$1061,v$1064){if (v$1061 == null) {throw [basis$0Initial$1.en$Fail$50,"ISOdate.MonthDay.numPrev called with empty list argument"];
} else {var v$1079 = v$1061;
var v$1080 = v$1079[1];
if (v$1080 == null) {var v$1081 = v$1079[0];
return (numPrev1$1029(v$1081[0],v$1081[1]))(v$1064);
} else {var v$1083 = v$1079[0];
var v$1739 = (numPrev1$1029(v$1083[0],v$1083[1]))(v$1064);
var v$1740 = fix$2262.$numPrev(v$1080,v$1064);
return (v$1739 < v$1740)?v$1739:v$1740;
};
};
};
isodate$0isodate$1.numPrev$1058 = fix$2262.$numPrev;
isodate$0isodate$1.prevDate$1123 = function(mds$1126,d$1129){var mdis$1130 = basis$0List$1.map$693(function(md$1133){return [md$1133,(numPrev1$1029(md$1133[0],md$1133[1]))(d$1129)];
},mds$1126);
var v$1161;
var v$1169;
var fix$2263 = {};
fix$2263.$least = function(v$2055){if (v$2055 == null) {return [1];
} else {var v$2056 = v$2055;
var v$2057 = v$2056[1];
if (v$2057 == null) {var v$2058 = v$2056[0];
return [0,v$2058];
} else {var v$2059 = v$2056[0];
var v$2060 = fix$2263.$least(v$2057);
switch (v$2060[0]) { case 1: {return [0,v$2059];
 break; }default: {var v$2061 = v$2060[1];
return (v$2059[1] < v$2061[1])?[0,v$2059]:[0,v$2061];
} };
};
};
};
var least$2054 = fix$2263.$least;
v$1169 = (least$2054(mdis$1130));
switch (v$1169[0]) { case 0: {v$1161 = v$1169[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"ISODate.prevDate.empty list of mds"];
} };
var v$1162 = v$1161[0];
var v$1163 = v$1162[1];
var v$1164 = v$1162[0];
var v$1157;
var v$2026 = SmlPrims.chk_ovf_i32(d$1129 >>> 9);
var v$2027 = SmlPrims.chk_ovf_i32(15 & (d$1129 >>> 5));
v$1157 = [SmlPrims.chk_ovf_i32(31 & d$1129),v$2027,v$2026];
var v$1158 = v$1157[2];
var v$1159 = v$1157[1];
var v$1160 = v$1157[0];
var year$1141 = ((v$1163 > v$1159)?true:((v$1163 == v$1159)?(v$1164 > v$1160):false))?(SmlPrims.chk_ovf_i32(v$1158 - 1)):v$1158;
var v$2029 = fromYMDopt$121(v$1164,v$1163,year$1141);
switch (v$2029[0]) { case 0: {return v$2029[1];
 break; }default: {var s$2031 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(year$1141))) + ",month=") + (basis$0Int32$1.toString$454(v$1163))) + ",day=") + (basis$0Int32$1.toString$454(v$1164))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$2031];
} };
};
isodate$0isodate$1.dateFilter$1180 = function(fromDate$1183,toDate$1186,f$1189){return function(v$2086){return basis$0List$1.filter$413(function(x$2087){var date$2088 = f$1189(x$2087);
return (fromDate$1183 <= date$2088)?(date$2088 <= toDate$1186):false;
},v$2086);
};
};
isodate$0isodate$1.fromExcel1900$1198 = function(n$1201){if (n$1201 < 1) {throw [basis$0Initial$1.en$Fail$50,"ISODate.fromExcel1900 expects a positive argument"];
} else {var n$1206 = (n$1201 <= 60)?n$1201:(SmlPrims.chk_ovf_i32(n$1201 - 1));
var d$1583;
var v$1756 = 7;
d$1583 = (basis$0Date$1.date$1025(n$1206,0,0,v$1756,[0,basis$0Time$1.zeroTime$56],0,1900));
var d$2034;
var v$1584 = basis$0Date$1.year$1065(d$1583);
var v$1585;
switch (basis$0Date$1.month$1074(d$1583)) { case 7: {v$1585 = 1;
 break; }case 8: {v$1585 = 2;
 break; }case 4: {v$1585 = 3;
 break; }case 11: {v$1585 = 4;
 break; }case 3: {v$1585 = 5;
 break; }case 5: {v$1585 = 6;
 break; }case 6: {v$1585 = 7;
 break; }case 10: {v$1585 = 8;
 break; }case 0: {v$1585 = 9;
 break; }case 1: {v$1585 = 10;
 break; }case 2: {v$1585 = 11;
 break; }default: {v$1585 = 12;
} };
d$2034 = [basis$0Date$1.day$1083(d$1583),v$1585,v$1584];
var v$2035 = fromYMDopt$121(d$2034[0],d$2034[1],d$2034[2]);
switch (v$2035[0]) { case 0: {return v$2035[1];
 break; }default: {var v$2036 = d$2034[2];
var v$2038 = d$2034[1];
var v$2039 = d$2034[0];
var s$2037 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2036))) + ",month=") + (basis$0Int32$1.toString$454(v$2038))) + ",day=") + (basis$0Int32$1.toString$454(v$2039))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$2037];
} };
};
};
isodate$0isodate$1.fromExcel1904$1214 = function(n$1217){if (n$1217 < 1) {throw [basis$0Initial$1.en$Fail$50,"ISODate.fromExcel1904 expects a positive argument"];
} else {var d$1592;
var v$1595;
var v$1223 = 7;
v$1595 = [SmlPrims.chk_ovf_i32(n$1217 + 1),v$1223,1904];
var v$1596 = v$1595[2];
var v$1597 = v$1595[1];
var v$1598 = v$1595[0];
d$1592 = (basis$0Date$1.date$1025(v$1598,0,0,v$1597,[0,basis$0Time$1.zeroTime$56],0,v$1596));
var d$2040;
var v$1593 = basis$0Date$1.year$1065(d$1592);
var v$1594;
switch (basis$0Date$1.month$1074(d$1592)) { case 7: {v$1594 = 1;
 break; }case 8: {v$1594 = 2;
 break; }case 4: {v$1594 = 3;
 break; }case 11: {v$1594 = 4;
 break; }case 3: {v$1594 = 5;
 break; }case 5: {v$1594 = 6;
 break; }case 6: {v$1594 = 7;
 break; }case 10: {v$1594 = 8;
 break; }case 0: {v$1594 = 9;
 break; }case 1: {v$1594 = 10;
 break; }case 2: {v$1594 = 11;
 break; }default: {v$1594 = 12;
} };
d$2040 = [basis$0Date$1.day$1083(d$1592),v$1594,v$1593];
var v$2041 = fromYMDopt$121(d$2040[0],d$2040[1],d$2040[2]);
switch (v$2041[0]) { case 0: {return v$2041[1];
 break; }default: {var v$2042 = d$2040[2];
var v$2044 = d$2040[1];
var v$2045 = d$2040[0];
var s$2043 = "fromYMD.invalid date: " + (((((("{year=" + (basis$0Int32$1.toString$454(v$2042))) + ",month=") + (basis$0Int32$1.toString$454(v$2044))) + ",day=") + (basis$0Int32$1.toString$454(v$2045))) + "}");
throw [basis$0Initial$1.en$Fail$50,"ISODate." + s$2043];
} };
};
};
return 0;
})();
