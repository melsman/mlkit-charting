if ((typeof(basis$0Time$1)) == "undefined") {basis$0Time$1 = {};
};
(function(){basis$0Time$1.en$Time$55 = new String("Time");
basis$0Time$1.exn$Time$55 = [basis$0Time$1.en$Time$55];
basis$0Time$1.zeroTime$56 = [-2147483648,0];
basis$0Time$1.now$57 = function(v$59){return SmlPrims.getrealtime();
};
basis$0Time$1.fromSeconds$64 = function(s$67){if (basis$0IntInf$1.s$j$2218([s$67,[0,[null,false]]])) {throw basis$0Time$1.exn$Time$55;
} else {return [SmlPrims.chk_ovf_i32((basis$0IntInf$1.toInt$1821(s$67)) + (-2147483648)),0];
};
};
basis$0Time$1.fromMilliseconds$72 = function(ms$75){if (basis$0IntInf$1.s$j$2218([ms$75,[0,[null,false]]])) {throw basis$0Time$1.exn$Time$55;
} else {return [SmlPrims.chk_ovf_i32((SmlPrims.div_i32(basis$0IntInf$1.toInt$1821(ms$75),1000,CompilerInitial.exn$Div$45)) + (-2147483648)),SmlPrims.chk_ovf_i32((SmlPrims.mod_i32(basis$0IntInf$1.toInt$1821(ms$75),1000,CompilerInitial.exn$Div$45)) * 1000)];
};
};
basis$0Time$1.fromMicroseconds$80 = function(us$83){if (basis$0IntInf$1.s$j$2218([us$83,[0,[null,false]]])) {throw basis$0Time$1.exn$Time$55;
} else {return [SmlPrims.chk_ovf_i32((SmlPrims.div_i32(basis$0IntInf$1.toInt$1821(us$83),1000000,CompilerInitial.exn$Div$45)) + (-2147483648)),SmlPrims.mod_i32(basis$0IntInf$1.toInt$1821(us$83),1000000,CompilerInitial.exn$Div$45)];
};
};
basis$0Time$1.toSeconds$88 = function(v$93,v$587){return basis$0IntInf$1.s$g$1983(basis$0IntInf$1.fromInt$1825(v$93),basis$0IntInf$1.fromInt$1825(-2147483648));
};
basis$0Time$1.toMilliseconds$95 = function(v$100,v$101){return basis$0IntInf$1.s$f$1939(basis$0IntInf$1.s$t$1896(basis$0IntInf$1.s$g$1983(basis$0IntInf$1.fromInt$1825(v$100),basis$0IntInf$1.fromInt$1825(-2147483648)),[0,[[1000,null],false]]),basis$0IntInf$1.div$2157([basis$0IntInf$1.fromInt$1825(v$101),[0,[[1000,null],false]]]));
};
basis$0Time$1.toMicroseconds$102 = function(v$107,v$108){return basis$0IntInf$1.s$f$1939(basis$0IntInf$1.s$t$1896(basis$0IntInf$1.s$g$1983(basis$0IntInf$1.fromInt$1825(v$107),basis$0IntInf$1.fromInt$1825(-2147483648)),[0,[[1000000,null],false]]),basis$0IntInf$1.fromInt$1825(v$108));
};
basis$0Time$1.fromReal$109 = function(r$112){try {var rf$113;
if (r$112 < 0.0) {throw basis$0Time$1.exn$Time$55;
} else {rf$113 = (SmlPrims.chk_ovf_i32(Math.floor(r$112 + (-2147483648))));
};
return [rf$113,SmlPrims.chk_ovf_i32(Math.floor(1000000.0 * ((r$112 + (-2147483648)) - rf$113)))];
} catch(v$606) {return (function(Overflow$120){var t$607 = Overflow$120;
if (t$607[0] == CompilerInitial.en$Overflow$48) {throw basis$0Time$1.exn$Time$55;
} else {throw Overflow$120;
};
})(v$606);
};
};
basis$0Time$1.toReal$121 = function(v$588,v$589){return (v$588 - (-2147483648)) + (v$589 / 1000000.0);
};
basis$0Time$1.fmt$135 = function(p$138,t$141){return (basis$0Real$1.fmt$160([2,[0,(p$138 > 0)?p$138:0]]))((t$141[0] - (-2147483648)) + (t$141[1] / 1000000.0));
};
basis$0Time$1.toString$146 = function(v$590,v$591){return (basis$0Real$1.fmt$160([2,[0,3]]))((v$590 - (-2147483648)) + (v$591 / 1000000.0));
};
basis$0Time$1.scan$150 = function(getc$153,source$156){var fix$608 = {};
fix$608.$pow10 = function(v$171){switch (v$171) { case 0: {return 1;
 break; }default: {return SmlPrims.chk_ovf_i32(10 * (fix$608.$pow10(SmlPrims.chk_ovf_i32(v$171 - 1))));
} };
};
var pow10$168 = fix$608.$pow10;
var fix$609 = {};
fix$609.$skipdigs = function(src$191){lab$skipdigs: while (true) {var v$197 = getc$153(src$191);
switch (v$197[0]) { case 1: {return src$191;
 break; }default: {var v$202 = v$197[1];
var v$203 = v$202[0];
var v$204 = v$202[1];
if ((48 <= v$203)?(v$203 <= 57):false) {var t$610 = v$204;
var src$191 = t$610;
continue lab$skipdigs;
} else {return src$191;
};
} };
};
};
var skipdigs$188 = fix$609.$skipdigs;
var fix$611 = {};
fix$611.$intg = function(intgv$238,src$241){lab$intg: while (true) {var v$250 = getc$153(src$241);
switch (v$250[0]) { case 1: {var t$613;
var t$612;
var usecs$498 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - 6))) * 0)) + 5),10,CompilerInitial.exn$Div$45);
t$612 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$238 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$498,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$498,1000000,CompilerInitial.exn$Div$45)];
t$613 = [t$612,src$241];
return [0,t$613];
 break; }default: {var v$251 = v$250[1];
var v$252 = v$251[0];
switch (v$252) { case 46: {var v$253 = v$251[1];
var fix$614 = {};
fix$614.$frac = function(decs$545,fracv$546,src$547){lab$frac: while (true) {if (decs$545 >= 7) {var t$616;
var t$615;
var usecs$551 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$545))) * fracv$546)) + 5),10,CompilerInitial.exn$Div$45);
t$615 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$238 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$551,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$551,1000000,CompilerInitial.exn$Div$45)];
t$616 = [t$615,skipdigs$188(src$547)];
return [0,t$616];
} else {var v$552 = getc$153(src$547);
switch (v$552[0]) { case 1: {var t$618;
var t$617;
var usecs$556 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$545))) * fracv$546)) + 5),10,CompilerInitial.exn$Div$45);
t$617 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$238 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$556,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$556,1000000,CompilerInitial.exn$Div$45)];
t$618 = [t$617,src$547];
return [0,t$618];
 break; }default: {var v$557 = v$552[1];
var v$558 = v$557[0];
var v$559 = v$557[1];
if ((48 <= v$558)?(v$558 <= 57):false) {var t$621 = SmlPrims.chk_ovf_i32(decs$545 + 1);
var t$622 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(10 * fracv$546)) + (SmlPrims.chk_ovf_i32(v$558 - 48)));
var t$623 = v$559;
var decs$545 = t$621;
var fracv$546 = t$622;
var src$547 = t$623;
continue lab$frac;
} else {var t$620;
var t$619;
var usecs$564 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$545))) * fracv$546)) + 5),10,CompilerInitial.exn$Div$45);
t$619 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$238 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$564,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$564,1000000,CompilerInitial.exn$Div$45)];
t$620 = [t$619,src$547];
return [0,t$620];
};
} };
};
};
};
var frac$544 = fix$614.$frac;
return frac$544(0,0,v$253);
 break; }default: {var v$258 = v$251[1];
if ((48 <= v$252)?(v$252 <= 57):false) {var t$626 = (10.0 * intgv$238) + (SmlPrims.chk_ovf_i32(v$252 - 48));
var t$627 = v$258;
var intgv$238 = t$626;
var src$241 = t$627;
continue lab$intg;
} else {var t$625;
var t$624;
var usecs$505 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - 6))) * 0)) + 5),10,CompilerInitial.exn$Div$45);
t$624 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$238 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$505,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$505,1000000,CompilerInitial.exn$Div$45)];
t$625 = [t$624,src$241];
return [0,t$625];
};
} };
} };
};
};
var intg$235 = fix$611.$intg;
var v$267 = getc$153(basis$0StringCvt$1.dropl$246(function(c$508){return (c$508 == 32)?true:((9 <= c$508)?(c$508 <= 13):false);
},getc$153,source$156));
switch (v$267[0]) { case 1: {return [1];
 break; }default: {var v$268 = v$267[1];
var v$269 = v$268[0];
switch (v$269) { case 46: {var v$283 = v$268[1];
var v$275 = getc$153(v$283);
switch (v$275[0]) { case 1: {return [1];
 break; }default: {var v$280 = v$275[1];
var v$281 = v$280[0];
var v$282 = v$280[1];
if ((48 <= v$281)?(v$281 <= 57):false) {var fix$628 = {};
fix$628.$frac = function(decs$567,fracv$568,src$569){lab$frac: while (true) {if (decs$567 >= 7) {var t$630;
var t$629;
var usecs$573 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$567))) * fracv$568)) + 5),10,CompilerInitial.exn$Div$45);
t$629 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$573,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$573,1000000,CompilerInitial.exn$Div$45)];
t$630 = [t$629,skipdigs$188(src$569)];
return [0,t$630];
} else {var v$574 = getc$153(src$569);
switch (v$574[0]) { case 1: {var t$632;
var t$631;
var usecs$578 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$567))) * fracv$568)) + 5),10,CompilerInitial.exn$Div$45);
t$631 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$578,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$578,1000000,CompilerInitial.exn$Div$45)];
t$632 = [t$631,src$569];
return [0,t$632];
 break; }default: {var v$579 = v$574[1];
var v$580 = v$579[0];
var v$581 = v$579[1];
if ((48 <= v$580)?(v$580 <= 57):false) {var t$635 = SmlPrims.chk_ovf_i32(decs$567 + 1);
var t$636 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(10 * fracv$568)) + (SmlPrims.chk_ovf_i32(v$580 - 48)));
var t$637 = v$581;
var decs$567 = t$635;
var fracv$568 = t$636;
var src$569 = t$637;
continue lab$frac;
} else {var t$634;
var t$633;
var usecs$586 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$168(SmlPrims.chk_ovf_i32(7 - decs$567))) * fracv$568)) + 5),10,CompilerInitial.exn$Div$45);
t$633 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$586,1000000,CompilerInitial.exn$Div$45))),SmlPrims.mod_i32(usecs$586,1000000,CompilerInitial.exn$Div$45)];
t$634 = [t$633,src$569];
return [0,t$634];
};
} };
};
};
};
var frac$566 = fix$628.$frac;
var v$602 = SmlPrims.chk_ovf_i32(v$281 - 48);
return frac$566(1,v$602,v$282);
} else {return [1];
};
} };
 break; }default: {var v$288 = v$268[1];
if ((48 <= v$269)?(v$269 <= 57):false) {return intg$235(SmlPrims.chk_ovf_i32(v$269 - 48),v$288);
} else {return [1];
};
} };
} };
};
basis$0Time$1.fromString$289 = function(s$292){return basis$0StringCvt$1.scanString$159(function(v$604){return function(v$605){return basis$0Time$1.scan$150(v$604,v$605);
};
},s$292);
};
basis$0Time$1.s$f$293 = function(v$301,v$592){var v$302 = v$301[0];
var v$303 = v$301[1];
var v$305 = v$592[0];
var v$306 = v$592[1];
var usecs$300 = SmlPrims.chk_ovf_i32(v$303 + v$306);
return [SmlPrims.chk_ovf_i32(SmlPrims.trunc(((v$302 - (-2147483648)) + v$305) + (SmlPrims.div_i32(usecs$300,1000000,CompilerInitial.exn$Div$45)))),SmlPrims.mod_i32(usecs$300,1000000,CompilerInitial.exn$Div$45)];
};
basis$0Time$1.s$g$307 = function(v$323,v$593){var v$324 = v$323[0];
var v$325 = v$323[1];
var v$327 = v$593[0];
var v$328 = v$593[1];
try {var usecs$314 = SmlPrims.chk_ovf_i32(v$325 - v$328);
var secs$315 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$324 - v$327)) + (SmlPrims.div_i32(usecs$314,1000000,CompilerInitial.exn$Div$45)));
if (secs$315 < 0) {throw basis$0Time$1.exn$Time$55;
} else {return [SmlPrims.chk_ovf_i32(secs$315 + (-2147483648)),SmlPrims.mod_i32(usecs$314,1000000,CompilerInitial.exn$Div$45)];
};
} catch(v$638) {return (function(Overflow$322){var t$639 = Overflow$322;
if (t$639[0] == CompilerInitial.en$Overflow$48) {throw basis$0Time$1.exn$Time$55;
} else {throw Overflow$322;
};
})(v$638);
};
};
basis$0Time$1.s$j$329 = function(v$344,v$594){var v$345 = v$344[0];
var v$346 = v$344[1];
var v$348 = v$594[0];
var v$349 = v$594[1];
return (v$345 < v$348)?true:((v$345 == v$348)?(v$346 < v$349):false);
};
basis$0Time$1.s$jk$350 = function(v$365,v$595){var v$366 = v$365[0];
var v$367 = v$365[1];
var v$369 = v$595[0];
var v$370 = v$595[1];
return (v$366 < v$369)?true:((v$366 == v$369)?(v$367 <= v$370):false);
};
basis$0Time$1.s$l$371 = function(v$386,v$596){var v$387 = v$386[0];
var v$388 = v$386[1];
var v$390 = v$596[0];
var v$391 = v$596[1];
return (v$387 > v$390)?true:((v$387 == v$390)?(v$388 > v$391):false);
};
basis$0Time$1.s$lk$392 = function(v$407,v$597){var v$408 = v$407[0];
var v$409 = v$407[1];
var v$411 = v$597[0];
var v$412 = v$597[1];
return (v$408 > v$411)?true:((v$408 == v$411)?(v$409 >= v$412):false);
};
basis$0Time$1.compare$413 = function(v$426,v$427){var t$641;
var v$521 = v$426[0];
var v$522 = v$426[1];
var v$524 = v$427[0];
var v$525 = v$427[1];
t$641 = ((v$521 < v$524)?true:((v$521 == v$524)?(v$522 < v$525):false));
if (t$641) {return 0;
} else {var t$640;
var v$528 = v$426[0];
var v$529 = v$426[1];
var v$531 = v$427[0];
var v$532 = v$427[1];
t$640 = ((v$528 > v$531)?true:((v$528 == v$531)?(v$529 > v$532):false));
return t$640?1:2;
};
};
return 0;
})();
