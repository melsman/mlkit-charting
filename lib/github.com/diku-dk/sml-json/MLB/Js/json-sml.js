if ((typeof(json$0json$1)) == "undefined") {json$0json$1 = {};
};
(function(){json$0json$1.eq_token$1079 = function(v$1081,v$1082){switch (v$1081[0]) { case 0: {switch (v$1082[0]) { case 0: {return v$1081[1] == v$1082[1];
 break; }default: {return false;
} };
 break; }case 1: {switch (v$1082[0]) { case 1: {return v$1081[1] == v$1082[1];
 break; }default: {return false;
} };
 break; }case 2: {switch (v$1082[0]) { case 2: {return v$1081[1] == v$1082[1];
 break; }default: {return false;
} };
 break; }case 3: {switch (v$1082[0]) { case 3: {return v$1081[1] == v$1082[1];
 break; }default: {return false;
} };
 break; } };
};
json$0json$1.objFromList$68 = function(l$71){var fix$1773 = {};
fix$1773.$foldl = function(v$1106,v$1107){lab$foldl: while (true) {if (v$1107 == null) {return v$1106;
} else {var v$1108 = v$1107;
var v$1109 = v$1108[0];
var v$1110 = v$1108[1];
var t$1774;
var v$1113 = v$1109[0];
var v$1114 = v$1109[1];
t$1774 = (string_map$0StringMap$1$3.add$427(v$1113,v$1114,v$1106));
var t$1775 = t$1774;
var t$1776 = v$1110;
var v$1106 = t$1775;
var v$1107 = t$1776;
continue lab$foldl;
};
};
};
var foldl$1105 = fix$1773.$foldl;
return foldl$1105(string_map$0StringMap$1$3.empty$151(0),l$71);
};
json$0json$1.objFromKeyValues$81 = function(l$84){var fix$1777 = {};
fix$1777.$foldl = function(v$1126,v$1127){lab$foldl: while (true) {if (v$1127 == null) {return v$1126;
} else {var v$1128 = v$1127;
var v$1129 = v$1128[0];
var v$1130 = v$1128[1];
var t$1778;
var v$1133 = v$1129[0];
var v$1134 = v$1129[1];
t$1778 = (string_map$0StringMap$1$3.add$427(v$1133,[0,v$1134],v$1126));
var t$1779 = t$1778;
var t$1780 = v$1130;
var v$1126 = t$1779;
var v$1127 = t$1780;
continue lab$foldl;
};
};
};
var foldl$1125 = fix$1777.$foldl;
return foldl$1125(string_map$0StringMap$1$3.empty$151(0),l$84);
};
json$0json$1.objLook$94 = function(obj$97,k$100){return string_map$0StringMap$1$3.lookup$167(obj$97,k$100);
};
json$0json$1.objFold$101 = function(f$104,acc$107,obj$110){return string_map$0StringMap$1$3.Fold$929(function(v$115){var v$116 = v$115[0];
var v$117 = v$116[0];
var v$118 = v$116[1];
var v$119 = v$115[1];
return f$104([[v$117,v$118],v$119]);
},acc$107,obj$110);
};
json$0json$1.objList$120 = function(obj$123){return string_map$0StringMap$1$3.list$821(obj$123);
};
json$0json$1.objAdd$124 = function(obj$127,k$130,v$133){return string_map$0StringMap$1$3.add$427(k$130,v$133,obj$127);
};
json$0json$1.objEmp$134 = string_map$0StringMap$1$3.empty$151(0);
var fix$1781 = {};
fix$1781.$to_str = function(v$138,v$141){switch (v$138[0]) { case 1: {return [v$138[1],v$141];
 break; }case 0: {return ["\"",[v$138[1],["\"",v$141]]];
 break; }case 2: {var v$241 = v$138[1];
var fix$1855 = {};
fix$1855.$loop = function(v$211,v$214){lab$loop: while (true) {if (v$211 == null) {return v$214;
} else {var v$231 = v$211;
var v$232 = v$231[1];
if (v$232 == null) {var v$233 = v$231[0];
var v$234 = v$233[0];
var v$235 = v$233[1];
return fix$1781.$to_str(v$235,["\":",[v$234,["\"",v$214]]]);
} else {var v$237 = v$231[0];
var v$238 = v$237[0];
var v$239 = v$237[1];
var t$1856 = v$232;
var t$1857 = [", ",fix$1781.$to_str(v$239,["\":",[v$238,["\"",v$214]]])];
var v$211 = t$1856;
var v$214 = t$1857;
continue lab$loop;
};
};
};
};
var loop$208 = fix$1855.$loop;
return ["}",loop$208(string_map$0StringMap$1$3.list$821(v$241),["{",v$141])];
 break; }case 6: {var v$205 = v$138[1];
var fix$1852 = {};
fix$1852.$loop = function(v$181,v$184){lab$loop: while (true) {if (v$181 == null) {return v$184;
} else {var v$199 = v$181;
var v$200 = v$199[1];
if (v$200 == null) {var v$201 = v$199[0];
return fix$1781.$to_str(v$201,v$184);
} else {var v$203 = v$199[0];
var t$1853 = v$200;
var t$1854 = [", ",fix$1781.$to_str(v$203,v$184)];
var v$181 = t$1853;
var v$184 = t$1854;
continue lab$loop;
};
};
};
};
var loop$178 = fix$1852.$loop;
return ["]",loop$178(v$205,["[",v$141])];
 break; }case 4: {return ["null",v$141];
 break; }case 5: {return v$138[1]?["true",v$141]:["false",v$141];
 break; }default: {return [v$138[1],v$141];
} };
};
var to_str$135 = fix$1781.$to_str;
json$0json$1.toString$251 = function(js$254){return SmlPrims.concat(basis$0List$1.rev$678(to_str$135(js$254,null)));
};
var fix$1782 = {};
fix$1782.$lex_id = function(v$360,v$361,v$362){lab$lex_id: while (true) {var v$348;
var v$1149 = v$361[0];
var v$1150 = v$361[1];
v$348 = ((v$1150 >= v$1149.length)?[1]:[0,[basis$0String$1.sub$97(v$1149,v$1150),[v$1149,SmlPrims.chk_ovf_i32(v$1150 + 1)]]]);
switch (v$348[0]) { case 1: {var t$1787 = v$361;
var t$1786;
var t$1785;
var t$1784;
var t$1783;
var v$1153 = v$360[0];
var v$1154 = v$360[1];
var v$1156 = v$361[1];
t$1783 = (basis$0String$1.substring$165(v$1153,v$1154,SmlPrims.chk_ovf_i32(v$1156 - v$1154)));
t$1784 = [3,t$1783];
t$1785 = [t$1784,v$362];
t$1786 = t$1785;
return [t$1787,t$1786];
 break; }default: {var v$357 = v$348[1];
var v$358 = v$357[0];
var v$359 = v$357[1];
if (((((97 <= v$358)?(v$358 <= 122):false)?true:((65 <= v$358)?(v$358 <= 90):false))?true:((48 <= v$358)?(v$358 <= 57):false))?true:(v$358 == 95)) {var t$1793 = v$360;
var t$1794 = v$359;
var t$1795 = v$362;
var v$360 = t$1793;
var v$361 = t$1794;
var v$362 = t$1795;
continue lab$lex_id;
} else {var t$1792 = v$361;
var t$1791;
var t$1790;
var t$1789;
var t$1788;
var v$1160 = v$360[0];
var v$1161 = v$360[1];
var v$1163 = v$361[1];
t$1788 = (basis$0String$1.substring$165(v$1160,v$1161,SmlPrims.chk_ovf_i32(v$1163 - v$1161)));
t$1789 = [3,t$1788];
t$1790 = [t$1789,v$362];
t$1791 = t$1790;
return [t$1792,t$1791];
};
} };
};
};
var lex_id$337 = fix$1782.$lex_id;
var fix$1796 = {};
fix$1796.$lex_str = function(v$381,v$382,v$383){lab$lex_str: while (true) {var v$376;
var v$1165 = v$382[0];
var v$1166 = v$382[1];
v$376 = ((v$1166 >= v$1165.length)?[1]:[0,[basis$0String$1.sub$97(v$1165,v$1166),[v$1165,SmlPrims.chk_ovf_i32(v$1166 + 1)]]]);
switch (v$376[0]) { case 1: {throw [basis$0Initial$1.en$Fail$50,"Json: lexer found unclosed string"];
 break; }default: {var v$377 = v$376[1];
switch (v$377[0]) { case 34: {var t$1801 = v$377[1];
var t$1800;
var t$1799;
var t$1798;
var t$1797;
var v$1171 = v$381[0];
var v$1172 = v$381[1];
var v$1174 = v$382[1];
t$1797 = (basis$0String$1.substring$165(v$1171,v$1172,SmlPrims.chk_ovf_i32(v$1174 - v$1172)));
t$1798 = [1,t$1797];
t$1799 = [t$1798,v$383];
t$1800 = t$1799;
return [t$1801,t$1800];
 break; }default: {var v$380 = v$377[1];
var t$1802 = v$381;
var t$1803 = v$380;
var t$1804 = v$383;
var v$381 = t$1802;
var v$382 = t$1803;
var v$383 = t$1804;
continue lab$lex_str;
} };
} };
};
};
var lex_str$363 = fix$1796.$lex_str;
var fix$1805 = {};
fix$1805.$lex_pmd2 = function(v$591,v$592,v$593){lab$lex_pmd2: while (true) {var v$583;
var v$1176 = v$592[0];
var v$1177 = v$592[1];
v$583 = ((v$1177 >= v$1176.length)?[1]:[0,[basis$0String$1.sub$97(v$1176,v$1177),[v$1176,SmlPrims.chk_ovf_i32(v$1177 + 1)]]]);
switch (v$583[0]) { case 1: {return [v$592,basis$0List$1.rev$678([[2,SmlPrims.implode(basis$0List$1.rev$678(v$591))],v$593])];
 break; }default: {var v$588 = v$583[1];
var v$589 = v$588[0];
var v$590 = v$588[1];
if ((48 <= v$589)?(v$589 <= 57):false) {var t$1806 = [v$589,v$591];
var t$1807 = v$590;
var t$1808 = v$593;
var v$591 = t$1806;
var v$592 = t$1807;
var v$593 = t$1808;
continue lab$lex_pmd2;
} else {return [v$592,[[2,SmlPrims.implode(basis$0List$1.rev$678(v$591))],v$593]];
};
} };
};
};
var lex_pmd2$384 = fix$1805.$lex_pmd2;
var lex_pmd$385 = function(v$570,v$571,v$572){var v$562;
var v$1182 = v$571[0];
var v$1183 = v$571[1];
v$562 = ((v$1183 >= v$1182.length)?[1]:[0,[basis$0String$1.sub$97(v$1182,v$1183),[v$1182,SmlPrims.chk_ovf_i32(v$1183 + 1)]]]);
switch (v$562[0]) { case 1: {throw [basis$0Initial$1.en$Fail$50,"Json: lex_pmd error 2"];
 break; }default: {var v$567 = v$562[1];
var v$568 = v$567[0];
var v$569 = v$567[1];
if ((48 <= v$568)?(v$568 <= 57):false) {return lex_pmd2$384([v$568,v$570],v$569,v$572);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: lex_pmd error"];
};
} };
};
var lex_e$387 = function(v$524,v$525,v$526){var v$512;
var v$1195 = v$525[0];
var v$1196 = v$525[1];
v$512 = ((v$1196 >= v$1195.length)?[1]:[0,[basis$0String$1.sub$97(v$1195,v$1196),[v$1195,SmlPrims.chk_ovf_i32(v$1196 + 1)]]]);
switch (v$512[0]) { case 1: {return [v$525,basis$0List$1.rev$678([[2,SmlPrims.implode(basis$0List$1.rev$678(v$524))],v$526])];
 break; }default: {var v$521 = v$512[1];
var v$522 = v$521[0];
var v$523 = v$521[1];
if ((v$522 == 101)?true:(v$522 == 69)) {var v$1477 = [v$522,v$524];
var v$1202;
var v$1204 = v$523[0];
var v$1205 = v$523[1];
v$1202 = ((v$1205 >= v$1204.length)?[1]:[0,[basis$0String$1.sub$97(v$1204,v$1205),[v$1204,SmlPrims.chk_ovf_i32(v$1205 + 1)]]]);
switch (v$1202[0]) { case 1: {throw [basis$0Initial$1.en$Fail$50,"Json: lex_pm error"];
 break; }default: {var v$1208 = v$1202[1];
var v$1209 = v$1208[0];
var v$1210 = v$1208[1];
if ((v$1209 == 43)?true:(v$1209 == 45)) {return lex_pmd$385([v$1209,v$1477],v$1210,v$526);
} else {return lex_pmd$385(v$1477,v$523,v$526);
};
} };
} else {return [v$525,[[2,SmlPrims.implode(basis$0List$1.rev$678(v$524))],v$526]];
};
} };
};
var fix$1809 = {};
fix$1809.$lex_num_frac1 = function(v$499,v$500,v$501){lab$lex_num_frac1: while (true) {var v$491;
var v$1213 = v$500[0];
var v$1214 = v$500[1];
v$491 = ((v$1214 >= v$1213.length)?[1]:[0,[basis$0String$1.sub$97(v$1213,v$1214),[v$1213,SmlPrims.chk_ovf_i32(v$1214 + 1)]]]);
switch (v$491[0]) { case 1: {return [v$500,basis$0List$1.rev$678([[2,SmlPrims.implode(basis$0List$1.rev$678(v$499))],v$501])];
 break; }default: {var v$496 = v$491[1];
var v$497 = v$496[0];
var v$498 = v$496[1];
if ((48 <= v$497)?(v$497 <= 57):false) {var t$1810 = [v$497,v$499];
var t$1811 = v$498;
var t$1812 = v$501;
var v$499 = t$1810;
var v$500 = t$1811;
var v$501 = t$1812;
continue lab$lex_num_frac1;
} else {return lex_e$387(v$499,v$500,v$501);
};
} };
};
};
var lex_num_frac1$388 = fix$1809.$lex_num_frac1;
var lex_num_dot$390 = function(v$457,v$458,v$459){var v$449;
var v$1226 = v$458[0];
var v$1227 = v$458[1];
v$449 = ((v$1227 >= v$1226.length)?[1]:[0,[basis$0String$1.sub$97(v$1226,v$1227),[v$1226,SmlPrims.chk_ovf_i32(v$1227 + 1)]]]);
switch (v$449[0]) { case 1: {return [v$458,basis$0List$1.rev$678([[2,SmlPrims.implode(basis$0List$1.rev$678(v$457))],v$459])];
 break; }default: {var v$454 = v$449[1];
var v$455 = v$454[0];
var v$456 = v$454[1];
if (v$455 == 46) {var v$1482 = [v$455,v$457];
var v$1233;
var v$1235 = v$456[0];
var v$1236 = v$456[1];
v$1233 = ((v$1236 >= v$1235.length)?[1]:[0,[basis$0String$1.sub$97(v$1235,v$1236),[v$1235,SmlPrims.chk_ovf_i32(v$1236 + 1)]]]);
switch (v$1233[0]) { case 1: {throw [basis$0Initial$1.en$Fail$50,"Json: lex_num_frac error 2"];
 break; }default: {var v$1239 = v$1233[1];
var v$1240 = v$1239[0];
var v$1241 = v$1239[1];
if ((48 <= v$1240)?(v$1240 <= 57):false) {return lex_num_frac1$388([v$1240,v$1482],v$1241,v$459);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: lex_num_frac error"];
};
} };
} else {return lex_e$387(v$457,v$458,v$459);
};
} };
};
var fix$1813 = {};
fix$1813.$lex_num = function(v$436,v$437,v$438){lab$lex_num: while (true) {var v$428;
var v$1246 = v$437[0];
var v$1247 = v$437[1];
v$428 = ((v$1247 >= v$1246.length)?[1]:[0,[basis$0String$1.sub$97(v$1246,v$1247),[v$1246,SmlPrims.chk_ovf_i32(v$1247 + 1)]]]);
switch (v$428[0]) { case 1: {return [v$437,basis$0List$1.rev$678([[2,SmlPrims.implode(basis$0List$1.rev$678(v$436))],v$438])];
 break; }default: {var v$433 = v$428[1];
var v$434 = v$433[0];
var v$435 = v$433[1];
if ((48 <= v$434)?(v$434 <= 57):false) {var t$1814 = [v$434,v$436];
var t$1815 = v$435;
var t$1816 = v$438;
var v$436 = t$1814;
var v$437 = t$1815;
var v$438 = t$1816;
continue lab$lex_num;
} else {return lex_num_dot$390(v$436,v$437,v$438);
};
} };
};
};
var lex_num$391 = fix$1813.$lex_num;
var fix$1817 = {};
fix$1817.$lex = function(v$640,v$641){lab$lex: while (true) {var v$604;
var v$1259 = v$640[0];
var v$1260 = v$640[1];
v$604 = ((v$1260 >= v$1259.length)?[1]:[0,[basis$0String$1.sub$97(v$1259,v$1260),[v$1259,SmlPrims.chk_ovf_i32(v$1260 + 1)]]]);
switch (v$604[0]) { case 1: {return basis$0List$1.rev$678(v$641);
 break; }default: {var v$637 = v$604[1];
var v$638 = v$637[0];
var v$639 = v$637[1];
var v$1750;
if ((v$638 == 32)?true:((9 <= v$638)?(v$638 <= 13):false)) {v$1750 = [v$639,v$641];
} else {var t$1818;
switch (v$638) { case 91: {t$1818 = true;
 break; }case 93: {t$1818 = true;
 break; }case 44: {t$1818 = true;
 break; }case 58: {t$1818 = true;
 break; }case 123: {t$1818 = true;
 break; }case 125: {t$1818 = true;
 break; }default: {t$1818 = false;
} };
if (t$1818) {v$1750 = [v$639,[[0,v$638],v$641]];
} else {if ((((97 <= v$638)?(v$638 <= 122):false)?true:((65 <= v$638)?(v$638 <= 90):false))?true:(v$638 == 95)) {v$1750 = (lex_id$337(v$640,v$639,v$641));
} else {if (v$638 == 34) {v$1750 = (lex_str$363(v$639,v$639,v$641));
} else {if (v$638 == 45) {var v$1489 = [v$638,null];
var v$1268;
var v$1270 = v$639[0];
var v$1271 = v$639[1];
v$1268 = ((v$1271 >= v$1270.length)?[1]:[0,[basis$0String$1.sub$97(v$1270,v$1271),[v$1270,SmlPrims.chk_ovf_i32(v$1271 + 1)]]]);
switch (v$1268[0]) { case 1: {throw [basis$0Initial$1.en$Fail$50,"Json: lex_num0 error 2"];
 break; }default: {var v$1274 = v$1268[1];
var v$1275 = v$1274[0];
switch (v$1275) { case 48: {var v$1276 = v$1274[1];
v$1750 = (lex_num_dot$390([48,v$1489],v$1276,v$641));
 break; }default: {var v$1277 = v$1274[1];
if ((48 <= v$1275)?(v$1275 <= 57):false) {v$1750 = (lex_num$391([v$1275,v$1489],v$1277,v$641));
} else {throw [basis$0Initial$1.en$Fail$50,"Json: lex_num0 error"];
};
} };
} };
} else {if (v$638 == 48) {v$1750 = (lex_num_dot$390([v$638,null],v$639,v$641));
} else {if ((48 <= v$638)?(v$638 <= 57):false) {v$1750 = (lex_num$391([v$638,null],v$639,v$641));
} else {throw [basis$0Initial$1.en$Fail$50,"Json: lexing error"];
};
};
};
};
};
};
};
var t$1819 = v$1750[0];
var t$1820 = v$1750[1];
var v$640 = t$1819;
var v$641 = t$1820;
continue lab$lex;
} };
};
};
var lex$594 = fix$1817.$lex;
var fix$1821 = {};
fix$1821.$parse_json = function(ts$680){if (ts$680 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsing expecting json"];
} else {var v$714 = ts$680;
var v$715 = v$714[0];
switch (v$715[0]) { case 1: {return [[0,v$715[1]],v$714[1]];
 break; }case 3: {switch (v$715[1]) { case "null": {return [[4],v$714[1]];
 break; }case "true": {return [[5,true],v$714[1]];
 break; }case "false": {return [[5,false],v$714[1]];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsing expecting json"];
} };
 break; }case 2: {return [[3,v$715[1]],v$714[1]];
 break; }default: {switch (v$715[1]) { case 91: {var v$747 = v$714[1];
if (v$747 == null) {var v$1326 = ts$680;
var v$1327 = v$1326[1];
var v$1328;
var fix$1843 = {};
fix$1843.$parse_jsons = function(jsons$1600,ts$1601){lab$parse_jsons: while (true) {var v$1602 = fix$1821.$parse_json(ts$1601);
var v$1603 = v$1602[1];
if (v$1603 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} else {var v$1604 = v$1603;
var v$1605 = v$1604[0];
switch (v$1605[0]) { case 0: {switch (v$1605[1]) { case 44: {var v$1606 = v$1602[0];
var v$1607 = v$1604[1];
var t$1844 = [v$1606,jsons$1600];
var t$1845 = v$1607;
var jsons$1600 = t$1844;
var ts$1601 = t$1845;
continue lab$parse_jsons;
 break; }case 93: {var v$1608 = v$1602[0];
var v$1609 = v$1604[1];
return [basis$0List$1.rev$678([v$1608,jsons$1600]),v$1609];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
};
};
};
var parse_jsons$1599 = fix$1843.$parse_jsons;
var v$1759 = null;
v$1328 = (parse_jsons$1599(v$1759,v$1327));
return [[6,v$1328[0]],v$1328[1]];
} else {var v$749 = v$747;
var v$750 = v$749[0];
switch (v$750[0]) { case 0: {switch (v$750[1]) { case 93: {return [[6,null],v$749[1]];
 break; }default: {var v$1318 = ts$680;
var v$1319 = v$1318[1];
var v$1320;
var fix$1846 = {};
fix$1846.$parse_jsons = function(jsons$1564,ts$1565){lab$parse_jsons: while (true) {var v$1566 = fix$1821.$parse_json(ts$1565);
var v$1567 = v$1566[1];
if (v$1567 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} else {var v$1568 = v$1567;
var v$1569 = v$1568[0];
switch (v$1569[0]) { case 0: {switch (v$1569[1]) { case 44: {var v$1570 = v$1566[0];
var v$1571 = v$1568[1];
var t$1847 = [v$1570,jsons$1564];
var t$1848 = v$1571;
var jsons$1564 = t$1847;
var ts$1565 = t$1848;
continue lab$parse_jsons;
 break; }case 93: {var v$1572 = v$1566[0];
var v$1573 = v$1568[1];
return [basis$0List$1.rev$678([v$1572,jsons$1564]),v$1573];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
};
};
};
var parse_jsons$1563 = fix$1846.$parse_jsons;
var v$1755 = null;
v$1320 = (parse_jsons$1563(v$1755,v$1319));
return [[6,v$1320[0]],v$1320[1]];
} };
 break; }default: {var v$1322 = ts$680;
var v$1323 = v$1322[1];
var v$1324;
var fix$1849 = {};
fix$1849.$parse_jsons = function(jsons$1582,ts$1583){lab$parse_jsons: while (true) {var v$1584 = fix$1821.$parse_json(ts$1583);
var v$1585 = v$1584[1];
if (v$1585 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} else {var v$1586 = v$1585;
var v$1587 = v$1586[0];
switch (v$1587[0]) { case 0: {switch (v$1587[1]) { case 44: {var v$1588 = v$1584[0];
var v$1589 = v$1586[1];
var t$1850 = [v$1588,jsons$1582];
var t$1851 = v$1589;
var jsons$1582 = t$1850;
var ts$1583 = t$1851;
continue lab$parse_jsons;
 break; }case 93: {var v$1590 = v$1584[0];
var v$1591 = v$1586[1];
return [basis$0List$1.rev$678([v$1590,jsons$1582]),v$1591];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting ',' or ']'"];
} };
};
};
};
var parse_jsons$1581 = fix$1849.$parse_jsons;
var v$1757 = null;
v$1324 = (parse_jsons$1581(v$1757,v$1323));
return [[6,v$1324[0]],v$1324[1]];
} };
};
 break; }case 123: {var v$746 = v$714[1];
var v$736 = fix$1821.$parse_kvs(string_map$0StringMap$1$3.empty$151(0),v$746);
var v$737 = v$736[1];
if (v$737 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting '}'"];
} else {var v$739 = v$737;
var v$740 = v$739[0];
switch (v$740[0]) { case 0: {switch (v$740[1]) { case 125: {return [[2,v$736[0]],v$739[1]];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting '}'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parser expecting '}'"];
} };
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsing expecting json"];
} };
} };
};
};
fix$1821.$parse_kvs = function(v$765,v$768){if (v$768 == null) {return [v$765,v$768];
} else {var v$792 = v$768;
var v$793 = v$792[0];
switch (v$793[0]) { case 3: {var v$814 = v$792[1];
if (v$814 == null) {return [v$765,v$768];
} else {var v$816 = v$814;
var v$817 = v$816[0];
switch (v$817[0]) { case 0: {switch (v$817[1]) { case 58: {var v$827 = v$793[1];
var v$828 = v$816[1];
var v$823 = fix$1821.$parse_json(v$828);
var v$824 = v$823[0];
var v$825 = v$823[1];
return fix$1821.$parse_kvs$(string_map$0StringMap$1$3.add$427(v$827,v$824,v$765),v$825);
 break; }default: {return [v$765,v$768];
} };
 break; }default: {return [v$765,v$768];
} };
};
 break; }case 1: {var v$795 = v$792[1];
if (v$795 == null) {return [v$765,v$768];
} else {var v$797 = v$795;
var v$798 = v$797[0];
switch (v$798[0]) { case 0: {switch (v$798[1]) { case 58: {var v$808 = v$793[1];
var v$809 = v$797[1];
var v$804 = fix$1821.$parse_json(v$809);
var v$805 = v$804[0];
var v$806 = v$804[1];
return fix$1821.$parse_kvs$(string_map$0StringMap$1$3.add$427(v$808,v$805,v$765),v$806);
 break; }default: {return [v$765,v$768];
} };
 break; }default: {return [v$765,v$768];
} };
};
 break; }default: {return [v$765,v$768];
} };
};
};
fix$1821.$parse_kvs$ = function(acc$831,ts$834){if (ts$834 == null) {return [acc$831,ts$834];
} else {var v$843 = ts$834;
var v$844 = v$843[0];
switch (v$844[0]) { case 0: {switch (v$844[1]) { case 44: {var v$847 = v$843[1];
return fix$1821.$parse_kvs(acc$831,v$847);
 break; }default: {return [acc$831,ts$834];
} };
 break; }default: {return [acc$831,ts$834];
} };
};
};
var parse_json$677 = fix$1821.$parse_json;
var parse_kvs$676 = fix$1821.$parse_kvs;
var parse_kvs$$675 = fix$1821.$parse_kvs$;
json$0json$1.fromString$849 = function(s$852){var ts$853 = lex$594([s$852,0],null);
var v$860 = parse_json$677(ts$853);
if (v$860[1] == null) {return v$860[0];
} else {throw [basis$0Initial$1.en$Fail$50,"Json: fromString.garbage after json"];
};
};
json$0json$1.foldlArrayJson$905 = function(f$908,acc$911,s$914){var ts$915 = lex$594([s$914,0],null);
if (ts$915 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting '['"];
} else {var v$929 = ts$915;
var v$930 = v$929[0];
switch (v$930[0]) { case 0: {switch (v$930[1]) { case 91: {var v$933 = v$929[1];
if (v$933 == null) {var v$1375 = ts$915;
var v$1376 = v$1375[1];
var fix$1822 = {};
fix$1822.$foldl_jsons = function(acc$1741,ts$1742){lab$foldl_jsons: while (true) {var v$1743 = parse_json$677(ts$1742);
var v$1744 = v$1743[1];
if (v$1744 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} else {var v$1745 = v$1744;
var v$1746 = v$1745[0];
switch (v$1746[0]) { case 0: {switch (v$1746[1]) { case 44: {var v$1747 = v$1743[0];
var v$1748 = v$1745[1];
var t$1823 = f$908([v$1747,acc$1741]);
var t$1824 = v$1748;
var acc$1741 = t$1823;
var ts$1742 = t$1824;
continue lab$foldl_jsons;
 break; }case 93: {if (v$1745[1] == null) {var v$1749 = v$1743[0];
return f$908([v$1749,acc$1741]);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder found garbage after array"];
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
};
};
};
var foldl_jsons$1740 = fix$1822.$foldl_jsons;
return foldl_jsons$1740(acc$911,v$1376);
} else {var v$935 = v$933;
var v$936 = v$935[0];
switch (v$936[0]) { case 0: {switch (v$936[1]) { case 93: {if (v$935[1] == null) {return acc$911;
} else {var v$1366 = ts$915;
var v$1367 = v$1366[1];
var fix$1825 = {};
fix$1825.$foldl_jsons = function(acc$1708,ts$1709){lab$foldl_jsons: while (true) {var v$1710 = parse_json$677(ts$1709);
var v$1711 = v$1710[1];
if (v$1711 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} else {var v$1712 = v$1711;
var v$1713 = v$1712[0];
switch (v$1713[0]) { case 0: {switch (v$1713[1]) { case 44: {var v$1714 = v$1710[0];
var v$1715 = v$1712[1];
var t$1826 = f$908([v$1714,acc$1708]);
var t$1827 = v$1715;
var acc$1708 = t$1826;
var ts$1709 = t$1827;
continue lab$foldl_jsons;
 break; }case 93: {if (v$1712[1] == null) {var v$1716 = v$1710[0];
return f$908([v$1716,acc$1708]);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder found garbage after array"];
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
};
};
};
var foldl_jsons$1707 = fix$1825.$foldl_jsons;
return foldl_jsons$1707(acc$911,v$1367);
};
 break; }default: {var v$1369 = ts$915;
var v$1370 = v$1369[1];
var fix$1828 = {};
fix$1828.$foldl_jsons = function(acc$1719,ts$1720){lab$foldl_jsons: while (true) {var v$1721 = parse_json$677(ts$1720);
var v$1722 = v$1721[1];
if (v$1722 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} else {var v$1723 = v$1722;
var v$1724 = v$1723[0];
switch (v$1724[0]) { case 0: {switch (v$1724[1]) { case 44: {var v$1725 = v$1721[0];
var v$1726 = v$1723[1];
var t$1829 = f$908([v$1725,acc$1719]);
var t$1830 = v$1726;
var acc$1719 = t$1829;
var ts$1720 = t$1830;
continue lab$foldl_jsons;
 break; }case 93: {if (v$1723[1] == null) {var v$1727 = v$1721[0];
return f$908([v$1727,acc$1719]);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder found garbage after array"];
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
};
};
};
var foldl_jsons$1718 = fix$1828.$foldl_jsons;
return foldl_jsons$1718(acc$911,v$1370);
} };
 break; }default: {var v$1372 = ts$915;
var v$1373 = v$1372[1];
var fix$1831 = {};
fix$1831.$foldl_jsons = function(acc$1730,ts$1731){lab$foldl_jsons: while (true) {var v$1732 = parse_json$677(ts$1731);
var v$1733 = v$1732[1];
if (v$1733 == null) {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} else {var v$1734 = v$1733;
var v$1735 = v$1734[0];
switch (v$1735[0]) { case 0: {switch (v$1735[1]) { case 44: {var v$1736 = v$1732[0];
var v$1737 = v$1734[1];
var t$1832 = f$908([v$1736,acc$1730]);
var t$1833 = v$1737;
var acc$1730 = t$1832;
var ts$1731 = t$1833;
continue lab$foldl_jsons;
 break; }case 93: {if (v$1734[1] == null) {var v$1738 = v$1732[0];
return f$908([v$1738,acc$1730]);
} else {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder found garbage after array"];
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting ',' or ']'"];
} };
};
};
};
var foldl_jsons$1729 = fix$1831.$foldl_jsons;
return foldl_jsons$1729(acc$911,v$1373);
} };
};
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting '['"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: parsefolder expecting '['"];
} };
};
};
json$0json$1.fromKeyValues$944 = function(kvs$947){var t$1838;
var fix$1834 = {};
fix$1834.$foldl = function(v$1388,v$1389){lab$foldl: while (true) {if (v$1389 == null) {return v$1388;
} else {var v$1390 = v$1389;
var v$1391 = v$1390[0];
var v$1392 = v$1390[1];
var t$1835;
var v$1395 = v$1391[0];
var v$1396 = v$1391[1];
t$1835 = (string_map$0StringMap$1$3.add$427(v$1395,[0,v$1396],v$1388));
var t$1836 = t$1835;
var t$1837 = v$1392;
var v$1388 = t$1836;
var v$1389 = t$1837;
continue lab$foldl;
};
};
};
var foldl$1387 = fix$1834.$foldl;
t$1838 = (foldl$1387(string_map$0StringMap$1$3.empty$151(0),kvs$947));
return [2,t$1838];
};
json$0json$1.foldlArray$962 = function(f$965,a$968,json$971){switch (json$971[0]) { case 6: {var v$978 = json$971[1];
var fix$1839 = {};
fix$1839.$foldl = function(v$1402,v$1403){lab$foldl: while (true) {if (v$1403 == null) {return v$1402;
} else {var v$1404 = v$1403;
var v$1405 = v$1404[0];
var v$1406 = v$1404[1];
var t$1840 = f$965([v$1405,v$1402]);
var t$1841 = v$1406;
var v$1402 = t$1840;
var v$1403 = t$1841;
continue lab$foldl;
};
};
};
var foldl$1401 = fix$1839.$foldl;
return foldl$1401(a$968,v$978);
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: foldlArray.expects array"];
} };
};
json$0json$1.foldrArray$979 = function(f$982,a$985,json$988){switch (json$988[0]) { case 6: {var v$995 = json$988[1];
var fix$1842 = {};
fix$1842.$foldr = function(v$1702){if (v$1702 == null) {return a$985;
} else {var v$1703 = v$1702;
var v$1704 = v$1703[0];
var v$1705 = v$1703[1];
return f$982([v$1704,fix$1842.$foldr(v$1705)]);
};
};
var foldr$1701 = fix$1842.$foldr;
return foldr$1701(v$995);
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: foldrArray.expects array"];
} };
};
json$0json$1.getBool$996 = function(json$999,k$1002){var v$1009;
switch (json$999[0]) { case 2: {var v$1420 = json$999[1];
v$1009 = (string_map$0StringMap$1$3.lookup$167(v$1420,k$1002));
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getFomJsonObj.expects object"];
} };
switch (v$1009[0]) { case 0: {var v$1011 = v$1009[1];
switch (v$1011[0]) { case 5: {return v$1011[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getBool.wrong type"];
} };
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getBool.missing key"];
} };
};
json$0json$1.getString$1014 = function(json$1017,k$1020){var v$1027;
switch (json$1017[0]) { case 2: {var v$1429 = json$1017[1];
v$1027 = (string_map$0StringMap$1$3.lookup$167(v$1429,k$1020));
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getFomJsonObj.expects object"];
} };
switch (v$1027[0]) { case 0: {var v$1029 = v$1027[1];
switch (v$1029[0]) { case 0: {return v$1029[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getString.wrong type"];
} };
 break; }default: {var s$1434 = (("getString.missing key " + k$1020) + " in ") + (SmlPrims.concat(basis$0List$1.rev$678(to_str$135(json$1017,null))));
throw [basis$0Initial$1.en$Fail$50,"Json: " + s$1434];
} };
};
json$0json$1.getStringOpt$1032 = function(json$1035,k$1038,v$1041){var v$1048;
switch (json$1035[0]) { case 2: {var v$1442 = json$1035[1];
v$1048 = (string_map$0StringMap$1$3.lookup$167(v$1442,k$1038));
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getFomJsonObj.expects object"];
} };
switch (v$1048[0]) { case 0: {var v$1050 = v$1048[1];
switch (v$1050[0]) { case 0: {return v$1050[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$50,"Json: getStringOpt.wrong type"];
} };
 break; }default: {return v$1041;
} };
};
return 0;
})();
